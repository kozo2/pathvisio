<?xml version="1.0"?>
<project name="PathVisio" default="all" basedir=".">

	<!-- always be java 1.5 compatible -->
	<property name="ant.build.javac.target" value="1.5"/>
	<property name="ant.build.javac.source" value="1.5"/>

	<property name="src.dir" value="src"/>
	<property name="pathvisio.version" value="2.0.0"/>

	<!-- WikiPathways client -->
	<property name="axis.wpclient.dir" value="src-axis-wpclient"/>
	<property name="build.wpclient.dir" value="build/wpclient" />
	<property name="lib.axis.dir" value="lib/axis-1_4/lib" />
	
	<property name="build.core.dir" value="build/core"/>
	<property name="build.gui.dir" value="build/gui"/>
	<property name="build.swing.dir" value="build/swing"/>
	<property name="build.wikipathways.dir" value="build/wikipathways"/>
	<property name="build.visplugins.dir" value="build/visplugins"/>
	
    <property name="apidoc.dir" value="apidoc"/>
	<property name="webstart.dir" value="webstart"/>
	<property name="release.dir" value="release"/>
	
	<property name="build.wpi.bin" value="build/wpi/bin"/>
	<property name="build.wpi.applet" value="build/wpi/applet"/>
	<property name="wikipathways.dest.bin" value="${wikipathways.dest}/wpi/bin"/> <!-- install dir for wikipathways utilities !-->
	<property name="wikipathways.dest.applet" value="${wikipathways.dest}/wpi/applet"/> <!-- install dir for wikipathways applets !-->
	<property name="svn.exec.svnversion" value="svnversion"/>
	<property name="checkstyle.output.file" value="warnings.txt"/>

	<!-- libraries used by pathvisio-core.jar -->
	<path id="core.libs">
	  <fileset dir="lib">
		<include name="batik/*.jar"/>
		<include name="jdom.jar"/>
		<include name="bridgedb.jar"/>
		<include name="bridgedb-bio.jar"/>
	    <include name="resources.jar"/> <!-- TODO: this is not necessary, only GPML.xsd !-->
	  </fileset>
	</path>

	<!-- libraries used by pathvisio.jar -->
	<path id="standalone.libs">
	  <path refid="core.libs"/>
	  <fileset dir="lib">
	    <include name="derby.jar"/>
		<include name="forms-1.2.0.jar"/>
		<include name="swing-worker-1.1.jar"/>
		<include name="BrowserLauncher.jar"/>
		<include name="commons-math-2.0.jar"/>
	  </fileset>
	</path>
	
	<!-- libraries used by diffapplet.jar !-->
	<path id="diffview.libs">
	  <fileset dir="lib">
		<include name="jdom.jar"/>
		<include name="bridgedb.jar"/>
		<include name="bridgedb-bio.jar"/>
		<include name="swing-worker-1.1.jar"/>
	    <include name="resources.jar"/>
	    <include name="derbyclient.jar"/>	
	  </fileset>	
	</path>

	<!-- libraries used by wikipathways.jar !-->
	<path id="wikipathways.libs">
	  <path refid="diffview.libs"/>
	  <fileset dir="lib">
		<include name="apache/*.jar"/>
		<include name="forms-1.2.0.jar"/>
	  </fileset>	
	</path>
	
	<path id="project.core.class.path">
      <pathelement location="${build.core.dir}"/>
	  <path refid="core.libs"/>
	  <fileset dir="lib">
		<include name="junit.jar"/>
	    <include name="derby.jar"/>		
	  </fileset>
	</path>

	<path id="project.gui.class.path">
		<path refid="project.core.class.path"/>
		<pathelement location="${build.gui.dir}"/>
		<fileset dir="lib">
			<include name="forms-1.2.0.jar"/>
			<include name="swing-worker-1.1.jar"/>
		</fileset>
	</path>

	<path id="project.swing.class.path">
		<path refid="project.gui.class.path"/>
		<pathelement location="${build.swing.dir}"/>
		<fileset dir="lib">
			<include name="BrowserLauncher.jar"/>
			<include name="commons-math-2.0.jar"/>
		</fileset>
	</path>

	<path id="wpclient.class.path">
		<path location="${build.wpclient.dir}"/>
		<fileset dir="${lib.axis.dir}" includes="*.jar" />
		<pathelement location="lib/jdom.jar" />
		<pathelement location="lib/resources.jar" />
		<pathelement location="lib/derby.jar" />
		<pathelement location="pathvisio.jar" />
		<pathelement location="wikipathways.jar" />
	</path>

	<path id="project.wikipathways.class.path">
		<path refid="project.gui.class.path"/>
		<pathelement location="${build.wikipathways.dir}"/>
		<fileset dir="lib">
			<include name="apache/**/*.jar"/>
		</fileset>
	</path>

	<path id="project.all.class.path">
		<fileset dir=".">
			<include name="lib/**/*.jar"/>
		</fileset>
	</path>

	<target name="svnversion">
		<exec executable="${svn.exec.svnversion}" outputproperty="subversion_revision" failifexecutionfails="false">
			<arg line="-n ."/>
		</exec>
	</target>
	
	<target name="prepare" depends="svnversion">
		<mkdir dir="${build.core.dir}"/>
		<mkdir dir="${build.gui.dir}"/>
		<mkdir dir="${build.swing.dir}"/>
		<mkdir dir="${build.wikipathways.dir}"/>
		<mkdir dir="${build.wpclient.dir}"/>
		<mkdir dir="${build.visplugins.dir}"/>
		<mkdir dir="${apidoc.dir}"/>
		<mkdir dir="${build.wpi.bin}"/>
		<mkdir dir="${build.wpi.applet}/lib"/>
		<mkdir dir="${release.dir}" />
		<echo file="${src.dir}/core/org/pathvisio/Revision.java">
package org.pathvisio;

// Do not modify, this file is automatically generated
public class Revision 
{
	public static final String REVISION = "${subversion_revision}";
};
	  </echo>
	</target>
	
	<target name="clean" description="Remove all intermediate files.">
		<delete dir="${build.core.dir}"/>
		<delete dir="${build.gui.dir}"/>
		<delete dir="${build.swing.dir}"/>
		<delete dir="${build.wikipathways.dir}"/>
		<delete dir="${build.visplugins.dir}"/>
		<delete dir="${build.test.dir}"/>
		<delete dir="${apidoc.dir}"/>
		<delete dir="${webstart.dir}/www"/>
		<delete dir="${build.wpi.bin}"/>
		<delete dir="${build.wpi.applet}"/>
		<delete dir="${build.wpclient.dir}" />
	</target>

	<target name="dist-clean" depends="clean" description="Cleaner than clean: remove all generated files">
		<delete file="lib/resources.jar"/>
		<delete file="src/core/org/pathvisio/Revision.java"/>
		<delete file="visplugins.jar"/>
		<delete file="diffview.jar"/>
		<delete file="pathvisio_core.jar"/>
		<delete file="pathvisio.jar"/>
		<delete file="preloader.jar"/>
		<delete file="wikipathways.jar"/>
		<delete file="wikipathways-client.jar"/>
		<delete dir="${release.dir}" />
		<delete dir="${axis.wpclient.dir}" />
	</target>
	
	<target name="compile-core" depends="prepare,resources-jar" description="Compile core sources">
		<javac srcdir="src/core"
			   includes="**"
			   destdir="${build.core.dir}"
			   debug="true"
			   source="1.5">
		  <classpath refid="project.core.class.path"/>
		</javac>
	</target>

	<target name="compile-gui" depends="compile-core" description="Compile gui sources">
		<javac srcdir="src/gui"
			   includes="**"
			   destdir="${build.gui.dir}"
			   debug="true"
			   source="1.5">
			<classpath refid="project.gui.class.path"/>
		</javac>
	</target>

	<target name="compile-swing" depends="compile-gui" description="Compile swing standalone version">
		<javac srcdir="src/swing" 
               includes="**"			   
               destdir="${build.swing.dir}"
			   debug="true"
			   source="1.5">
          <classpath refid="project.swing.class.path"/>
		</javac>
	</target>

	<target name="compile-wikipathways" depends="compile-gui" description="Compile wikipathways version">
		<!-- compile applet -->
		<javac srcdir="src/wikipathways"
			includes="**"
			destdir="${build.wikipathways.dir}"
			source="1.5">
			<classpath refid="project.wikipathways.class.path"/>
		</javac>
	</target>
	
	<target name="compile-visplugins" depends="compile-swing" description="Compile visualization plugin sources">
		<javac srcdir="plugins/visualization"
			   includes="**"
			   destdir="${build.visplugins.dir}"
			   debug="true"
			   source="1.5">
			<classpath refid="project.swing.class.path"/>
		</javac>
		<javac srcdir="plugins/zscore"
			   includes="**"
			   destdir="${build.visplugins.dir}"
			   debug="true"
			   source="1.5">
			<classpath refid="project.swing.class.path"/>
		</javac>
		<javac srcdir="plugins/GexPlugin"
			   includes="**"
			   destdir="${build.visplugins.dir}"
			   debug="true"
			   source="1.5">
			<classpath refid="project.swing.class.path"/>
		</javac>
	</target>
		
	<target name="all" depends="jar,visplugins-jar,compile-wikipathways" description="Compile all versions of this project" />

	<target name="resources-jar" depends="prepare" description="Generates lib/resources.jar containing resource files">
		<jar jarfile="lib/resources.jar">
			<fileset dir="resources" includes="**"/>
			<fileset dir="." includes="GPML.xsd"/>
			<fileset dir="." includes="GPML2007.xsd"/>
			<fileset dir="." includes="MAPPTmpl.gtp"/>
		</jar>
	</target>
	
	<target name="jar" depends="compile-swing" description="Generates pathvisio.jar and pathvisio_core.jar">
		<manifestclasspath property="manifest.cp" jarfile="pathvisio.jar">
			<classpath refid="standalone.libs" />
		</manifestclasspath>
		
		<jar jarfile="pathvisio.jar">
			<manifest>
				<attribute name="Main-Class" value="org.pathvisio.gui.swing.GuiMain"/>
				<attribute name="Class-Path" value="${manifest.cp}"/>
			</manifest>
			<fileset dir="${build.core.dir}" includes="**/*.class"/>			
			<fileset dir="${build.gui.dir}" includes="**/*.class"/>	
			<fileset dir="${build.swing.dir}">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${src.dir}/swing">
				<include name="**/*.properties"/>
				<include name="**/*.gif"/>
			</fileset>
			<fileset dir="." includes="GPML.xsd"/>
		</jar>
		<jar jarfile="pathvisio_core.jar">
			<manifest>
				<attribute name="Main-Class" value="org.pathvisio.util.Converter"/>
				<attribute name="Class-Path" value="${manifest.cp}"/>
			</manifest>
			<fileset dir="${build.core.dir}" includes="**/*.class"/>
			<fileset dir="." includes="GPML.xsd"/>
		</jar>
    </target>

	<target name="visplugins-jar" depends="compile-visplugins" description="Generates jar with visualization plugins">
		<jar jarfile="visplugins.jar">
			<manifest>
				<attribute name="PathVisio-Plugin-Class" 
					value="org.pathvisio.plugins.gex.GexPlugin, org.pathvisio.plugins.statistics.StatisticsPlugin, org.pathvisio.visualization.plugins.VisualizationPlugin"/>
			</manifest>
			<fileset dir="${build.visplugins.dir}" includes="**/*.class"/>
		</jar>
	</target>

	<target name="wikipathways-jar" depends="compile-core, compile-gui, compile-wikipathways" description="Generate wikipathways jar file">
		<!-- Include packages					Exceptions
			src/gui
			src/core
				org.pathvisio.model				BatikImageExporter, SvgFormat
			src/wikipathways
		-->
		<jar jarfile="wikipathways.jar" index="true">
			<fileset dir="${build.wikipathways.dir}" includes="**/*.class">
				<exclude name="org/pathvisio/wikipathways/Preloader.class"/>
			</fileset>
			<fileset dir="${build.gui.dir}" includes="**/*.class"/>
			<fileset dir="${build.core.dir}" includes="**/*.class"/>
		</jar>
		<jar jarfile="preloader.jar" index="true">
			<fileset dir="${build.wikipathways.dir}" includes="org/pathvisio/wikipathways/Preloader.class"/>
		</jar>
		<!-- different resources.jar, only with minimal data -->
		<jar jarfile="${build.wpi.applet}/lib/resources.jar" index="true">
			<fileset dir="resources" excludes="logo-*, *.bmp, *.ai"/>
			<fileset dir="." includes="GPML.xsd"/>
			<fileset dir="." includes="GPML2007.xsd"/>
			<fileset dir="." includes="MAPPTmpl.gtp"/>
		</jar>
	</target>
	
	<target name="diffview-jar" depends="compile-core, compile-gui, compile-wikipathways" description="Generate diffview.jar, the diffviewer applet">
		<manifestclasspath property="manifest.cp.diffview" jarfile="diffview.jar">
		<classpath refid="diffview.libs" />
		</manifestclasspath>
		<jar jarfile="${build.wpi.applet}/diffview.jar">
			<fileset dir="${build.core.dir}" includes="**/*.class"/>
			<fileset dir="${build.gui.dir}" includes="**/*.class"/>
			<fileset dir="${build.wikipathways.dir}" includes="**/*.class"/>
            <manifest>
            	 <attribute name="Class-Path" value="${manifest.cp.diffview}"/>
            </manifest>
		</jar>
	</target>

	<target name="prepare-webstart" depends="jar,resources-jar,visplugins-jar" description="prepares webstart">
		<fail message="You must specify a keystore password for opening visioKeyStore: ant -Dkeystore.password=***** [ant target]">
			<condition>
				<not> <isset property="keystore.password"/> </not>
			</condition>
		</fail>
		<mkdir dir="${webstart.dir}/www"/>
		<!-- Update latest version file -->
		<echo file="${webstart.dir}/www/latestversion">${subversion_revision}</echo>
		<!-- Copy files needed for webstart !-->
		<copy file="pathvisio.jar" toDir="${webstart.dir}/www"/>
		<copy file="visplugins.jar" toDir="${webstart.dir}/www"/>
		<signjar jar="pathvisio.jar" 
			alias="PV" storepass="${keystore.password}" keystore="lib/visioKeyStore"/>
		<copy toDir="${webstart.dir}/www/lib">
			<fileset dir="lib" includes="**/*.jar"/>
		</copy>
		<signjar alias="PV"  
			storepass="${keystore.password}" keystore="lib/visioKeyStore">
			<fileset dir="${webstart.dir}/www" includes="**/*.jar"/>
		</signjar>
		<copy file="${webstart.dir}/pathvisio.jnlp" toDir="${webstart.dir}/www"/>
		<copy file="${webstart.dir}/pathvisio_with_plugins.jnlp" toDir="${webstart.dir}/www"/>
	</target>
	
	<target name="prepare-wpi" depends="jar, wikipathways-jar, diffview-jar" description="Prepare all applets and utilities needed by WikiPathways">
		<!-- Copy converter jar with modified main class -->
		<copy tofile="${build.wpi.bin}/pathvisio_color_exporter.jar"
			file="pathvisio_core.jar"/>
		<jar file="${build.wpi.bin}/pathvisio_color_exporter.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="org.pathvisio.util.ColorExporter"/>
			</manifest>
		</jar>

		<!-- Copy necessary libraries -->
	    <mkdir dir="${build.wpi.applet}/lib"/>
		<copy toDir="${build.wpi.applet}">
			<fileset dir=".">
				<include name="wikipathways.jar"/>
				<include name="preloader.jar"/>
			</fileset>
		</copy>
		<copy toDir="${build.wpi.applet}/lib">
			<path refid="wikipathways.libs"/>
			<path refid="diffview.libs"/>
		</copy>
		<mkdir dir="${build.wpi.bin}/lib"/>
		<copy toDir="${build.wpi.bin}">
			<fileset dir=".">
				<include name="pathvisio_core.jar"/>
				<include name="GPML.xsd"/>
				<include name="GPML2007.xsd"/>
			</fileset>
		</copy>
		<copy toDir="${build.wpi.bin}/lib">
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
		</copy>
		
		<!-- Copy preloader class -->
		<copy toDir="${build.wpi.applet}/org/pathvisio/wikipathways" 
			file="${build.wikipathways.dir}/org/pathvisio/wikipathways/Preloader.class"/>
		<manifestclasspath property="wikipathways.class.path" jarfile="wikiapathways.jar">
			<classpath refid="wikipathways.libs"/>
		</manifestclasspath>
		<echo file="${build.wpi.applet}/cache_archive" message="wikipathways.jar ${wikipathways.class.path}" />
	</target>
	
	<target name="install-wpi" depends="prepare-wpi" description="Install applets and utilities in the WikiPathways www directory">
		<fail message="You must specify a destination path for WikiPathways to run this task:    ant -Dwikipathways.dest=/path/to/wikipathways [ant target]">
			<condition>
				<not> <isset property="wikipathways.dest"/> </not>
			</condition>
		</fail>
		<fail message="You must specify a keystore password for opening visioKeyStore: ant -Dkeystore.password=***** [ant target]">
			<condition>
				<not> <isset property="keystore.password"/> </not>
			</condition>
		</fail>
		<!-- Sign all jar files -->
		<signjar alias="PV"  
			storepass="${keystore.password}" keystore="lib/visioKeyStore">
			<fileset dir="${build.wpi.applet}" includes="**/*.jar"/>
			<fileset dir="${build.wpi.bin}" includes="**/*.jar"/>
		</signjar>

		<!-- copy to /var/www/wikipathways -->
		<copy toDir="${wikipathways.dest.applet}">
			<fileset dir="${build.wpi.applet}" includes="**/*.*" />			
		</copy>
		<copy toDir="${wikipathways.dest.bin}">
			<fileset dir="${build.wpi.bin}" includes="**/*.*" />
		</copy>
	</target>
	
	<target name="docs" depends="prepare" description="generate api-docs">
		<tstamp /> <!-- set ${TODAY} -->
		<javadoc destdir="${apidoc.dir}" 
			doctitle="PathVisio"
			header="Revision ${subversion_revision}"
			footer="Generated ${TODAY}">
			<classpath refid="project.all.class.path"/>
			<packageset dir="src/core"/>
			<packageset dir="src/gui"/>
			<packageset dir="src/swing"/>
			<packageset dir="src/wikipathways"/>
			<packageset dir="src/wikipathways-client"/>
			<sourcepath>			
				<pathelement location="${src.dir}/core"/>
				<pathelement location="${src.dir}/gui"/>
				<pathelement location="${src.dir}/swing"/>
				<pathelement location="${src.dir}/wikipathways"/>
				<pathelement location="${src.dir}/wikipathways-client"/>
			</sourcepath>
		</javadoc>		
	</target>
	
	<target name="tarsrc" depends="svnversion" description="create source tarball and zip">
		<property name="srcbase" value="pathvisio_src-${pathvisio.version}-r${subversion_revision}"/>
		<zip destfile="${release.dir}/${srcbase}.zip">
			<zipfileset dir="." prefix="pathvisio-${pathvisio.version}">
				<include name="src/**/*.java"/>
				<include name="plugins/**/*"/>
				<exclude name="plugins/**/*.class"/>
				<include name="lib/**/*"/>
				<include name="lib-build/*.jar"/>
				<include name="resources/**/*"/>
				<include name="GPML.xsd"/>
				<include name="LICENSE-2.0.txt"/>
				<include name="NOTICE.txt"/>
				<include name="readme.txt"/>
				<include name="example-data/**/*"/>
				<include name="testData/**/*"/>
				<include name="build.xml"/>
				<include name="pathvisio.sh"/>
				<include name="pathvisio.bat"/>
			</zipfileset>
		</zip>
		<tar destfile="${release.dir}/${srcbase}.tar.gz" compression="gzip">
			<zipfileset src="${release.dir}/${srcbase}.zip"/>
		</tar>
	</target>

	<target name="tarbin" depends="jar,visplugins-jar" description="create binary tarball and zip">
		<property name="binbase" value="pathvisio_bin-${pathvisio.version}-r${subversion_revision}"/>
		<zip destfile="${release.dir}/${binbase}.zip">
			<zipfileset dir="." prefix="pathvisio-${pathvisio.version}">
				<include name="lib/batik/*.jar"/>
				<include name="lib/BrowserLauncher.jar"/>
				<include name="lib/derby.jar"/>
				<include name="lib/forms-1.2.0.jar"/>
				<include name="lib/jdom.jar"/>
				<include name="lib/bridgedb.jar"/>
				<include name="lib/bridgedb-bio.jar"/>
<!--				<include name="lib/paxtools/*.jar"/> -->
				<include name="lib/resources.jar"/>
				<include name="lib/swing-worker-1.1.jar"/>
				<include name="lib/licenses/*"/>
				<include name="GPML.xsd"/>
				<include name="LICENSE-2.0.txt"/>
				<include name="NOTICE.txt"/>
				<include name="readme.txt"/>
				<include name="pathvisio.sh"/>
				<include name="pathvisio.bat"/>
				<include name="pathvisio.jar"/>
				<include name="visplugins.jar"/>
			</zipfileset>
		</zip>
		<tar destfile="${release.dir}/${binbase}.tar.gz" compression="gzip">
			<zipfileset src="${release.dir}/${binbase}.zip"/>
		</tar>
	</target>

	<target name="tar" depends="tarsrc,tarbin" description="create both source and binary tarballs and zips"/>

	<target name="test" depends="compile-swing">
		<javac srcdir="test/core" debug="true" 
					includes="**"
					destdir="${build.core.dir}"
					source="1.5">
					<classpath refid="project.core.class.path"/>
		</javac>
		<junit printsummary="on" haltonfailure="true" fork="true">
			<formatter type="brief" usefile="false"/>
			<classpath refid="project.core.class.path"/>
			<batchtest>
				<fileset dir="test/core">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
		</junit>

		<javac srcdir="test/swing" debug="true" 
					includes="**"
					destdir="${build.swing.dir}"
					source="1.5">
					<classpath refid="project.swing.class.path"/>
		</javac>
		<junit printsummary="on" haltonfailure="true" fork="true">
			<formatter type="brief" usefile="false"/>
			<classpath refid="project.swing.class.path"/>
			<batchtest>
				<fileset dir="test/swing">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<taskdef resource="checkstyletask.properties"
			 classpath="lib-build/checkstyle-all-5.0-beta01.jar"/>
		
	<target name="checkstyle">
		<checkstyle config="tools/dailybuild/pv_checks.xml">
			<fileset dir="src">
				<include name="core/**/*.java"/>
				<include name="gui/**/*.java"/>
				<include name="swing/**/*.java"/>
				<include name="wikipathways/**/*.java"/>
			</fileset>
			<formatter toFile="${checkstyle.output.file}"/>
		</checkstyle>	
	</target>

	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="lib-build/jarbundler-2.1.0.jar" />

	<target name="jarbundler" depends="jar" description="Generate OS X Bundle">
		<!-- On operating systems other than Mac OS you have to set the stubfile property with -Dstubfile=/path/to/JavaApplicationStub.
		You can find JavaApplicationStub on any Mac OS X installation and copy it from there. !-->
		<jarbundler dir="${release.dir}" name="PathVisio" mainclass="org.pathvisio.gui.swing.GuiMain"
				stubfile="${stubfile}"
				icon="lib-build/bigcateye.icns">
		  <documenttype name="PathVisio Pathway"
						extensions="gpml" 
						role="Editor"/>
			<jarfileset dir=".">
				<include name="lib/*.jar" />
				<include name="lib/**/*.jar" />
				<include name="pathvisio.jar" />
			</jarfileset>
		</jarbundler>
		<zip destfile="${release.dir}/PathVisio.App.zip">
			<zipfileset dir="${release.dir}">
				<include name="PathVisio.app/**" />
			</zipfileset>
		</zip>
		<delete dir="${release.dir}/PathVisio.app"/>
	</target>
	
	<target name="wpclient-axis" depends="jar">
		<fail message="You must specify a url to the WikiPathways web service WSDL: 
			ant -Dwsdl.url=http://www.wikipathways.org/wpi/webservice/webservice.php?wsdl [ant target]">
			<condition>
				<not> <isset property="wsdl.url"/> </not>
			</condition>
		</fail>
		<java classpathref="wpclient.class.path" fork="true" failonerror="true" classname="org.apache.axis.wsdl.WSDL2Java">
			<arg value="-o" />
			<arg value="${axis.wpclient.dir}" />
			<arg value="-p" />
			<arg value="org.pathvisio.wikipathways.webservice" />
			<arg value="${wsdl.url}" />
		</java>
	</target>

	<target name="compile-wpclient" depends="wpclient-axis,wikipathways-jar,jar">
		<javac srcdir="${axis.wpclient.dir}" debug="true" destdir="${build.wpclient.dir}">
			<classpath refid="wpclient.class.path" />
		</javac>
		<javac srcdir="${src.dir}/wikipathways-client" debug="true" destdir="${build.wpclient.dir}">
			<classpath refid="wpclient.class.path" />
		</javac>
	</target>
	
	<target name="jar-wpclient" depends="compile-wpclient" description="Generate wikipathways-client jar file">
		<pathconvert refid="wpclient.class.path" property="class.path.manifest" pathsep=" ">
			<map from="${basedir}/" to="./" />		
		</pathconvert>

		<jar jarfile="wikipathways-client.jar">
			<fileset dir="${build.wpclient.dir}" includes="**/*.class" />
			<manifest>
				<attribute name="Class-Path" value="${class.path.manifest}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="tarbin-wpclient" depends="jar-wpclient" description="Create a binary tarball for the WikiPathways client">
		<property name="binbase2" value="wikipathways_client_bin-${pathvisio.version}-r${subversion_revision}" />
		
		<zip destfile="${release.dir}/${binbase2}.zip">
			<zipfileset dir="." prefix="wikipathways_client-${pathvisio.version}">
				<include name="wikipathways-client.jar" />
				<include name="lib/jdom.jar" />
				<include name="lib/derby.jar" />
				<include name="pathvisio.jar" />
				<include name="wikipathways.jar" />
				<include name="${lib.axis.dir}/*.jar" />
				<include name="lib/resources.jar"/>
				<include name="resources/botresult.css" />
				<include name="resources/sorttable.js" />
				<include name="lib/bridgedb.jar"/>
				<include name="lib/bridgedb-bio.jar"/>
			</zipfileset>
		</zip>
		<tar destfile="${release.dir}/${binbase2}.tar.gz" compression="gzip">
		  <zipfileset src="${release.dir}/${binbase2}.zip"/>
		</tar>
	</target>
	
	<target name="dist" depends="tarbin-wpclient,tar,jarbundler"/>

</project>
