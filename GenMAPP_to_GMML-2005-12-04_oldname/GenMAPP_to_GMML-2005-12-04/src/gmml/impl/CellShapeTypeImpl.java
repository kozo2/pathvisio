//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.19 at 03:49:42 PM CEST 
//


package gmml.impl;

public class CellShapeTypeImpl implements gmml.CellShapeType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
{

    protected gmml.CellShapeType.GraphicsType _Graphics;
    protected java.lang.String _Notes;
    public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (gmml.CellShapeType.class);
    }

    public gmml.CellShapeType.GraphicsType getGraphics() {
        return _Graphics;
    }

    public void setGraphics(gmml.CellShapeType.GraphicsType value) {
        _Graphics = value;
    }

    public java.lang.String getNotes() {
        return _Notes;
    }

    public void setNotes(java.lang.String value) {
        _Notes = value;
    }

    public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
        return new gmml.impl.CellShapeTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Notes!= null) {
            context.startElement("", "Notes");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Notes), "Notes");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "Graphics");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endElement();
    }

    public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (gmml.CellShapeType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002"
+"L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com"
+".sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.su"
+"n.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.da"
+"tatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/"
+"lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dat"
+"atype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XM"
+"LSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001asq\u0000~\u0000\u0006ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000\rpsq\u0000~\u0000\u000fppsr\u0000\"com.s"
+"un.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNames"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000)q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.Si"
+"mpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000"
+"\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001q\u0000~\u00003s"
+"q\u0000~\u0000-t\u0000\u0005Notest\u0000\u0000q\u0000~\u00003sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsr\u0000 c"
+"om.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gr"
+"ammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rpsq\u0000~\u0000$q\u0000~\u0000\rp"
+"sr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00004q\u0000~\u0000Asr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00003sq\u0000~\u0000-t\u0000\u001fgmml.CellShapeType.GraphicsTypet"
+"\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006ppsq\u0000~\u0000$q"
+"\u0000~\u0000\rpq\u0000~\u0000&q\u0000~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\bGraphicsq\u0000~\u00007sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000"
+"\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000~\u0000\u0007q"
+"\u0000~\u0000\u000eq\u0000~\u0000\u0005q\u0000~\u0000;q\u0000~\u0000>q\u0000~\u0000#q\u0000~\u0000Gq\u0000~\u00009x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class GraphicsTypeImpl implements gmml.CellShapeType.GraphicsType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
    {

        protected java.math.BigInteger _Width;
        protected java.math.BigInteger _Height;
        protected java.lang.String _Rotation;
        protected java.math.BigInteger _CenterY;
        protected java.math.BigInteger _CenterX;
        public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (gmml.CellShapeType.GraphicsType.class);
        }

        public java.math.BigInteger getWidth() {
            if (_Width == null) {
                return javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.DatatypeConverterImpl.installHook("1500"));
            } else {
                return _Width;
            }
        }

        public void setWidth(java.math.BigInteger value) {
            _Width = value;
        }

        public java.math.BigInteger getHeight() {
            if (_Height == null) {
                return javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.DatatypeConverterImpl.installHook("375"));
            } else {
                return _Height;
            }
        }

        public void setHeight(java.math.BigInteger value) {
            _Height = value;
        }

        public java.lang.String getRotation() {
            return _Rotation;
        }

        public void setRotation(java.lang.String value) {
            _Rotation = value;
        }

        public java.math.BigInteger getCenterY() {
            return _CenterY;
        }

        public void setCenterY(java.math.BigInteger value) {
            _CenterY = value;
        }

        public java.math.BigInteger getCenterX() {
            return _CenterX;
        }

        public void setCenterX(java.math.BigInteger value) {
            _CenterX = value;
        }

        public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            return new gmml.impl.CellShapeTypeImpl.GraphicsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "CenterX");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CenterX)), "CenterX");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "CenterY");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CenterY)), "CenterY");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Height!= null) {
                context.startAttribute("", "Height");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Height)), "Height");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_Rotation!= null) {
                context.startAttribute("", "Rotation");
                try {
                    context.text(((java.lang.String) _Rotation), "Rotation");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_Width!= null) {
                context.startAttribute("", "Width");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Width)), "Width");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
        }

        public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (gmml.CellShapeType.GraphicsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLco"
+"m/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.grammar."
+"DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006"
+"exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr"
+"\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinal"
+"Valuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTyp"
+"et\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv"
+".datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lja"
+"va/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0014L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
+"datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\nCoordinatesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u0000/com.sun.msv.datatype.xsd.NonNegativeIntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com"
+".sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFa"
+"cetsq\u0000~\u0000\u0012xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0013t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0012nonNegativeInteger"
+"q\u0000~\u0000\u001bsr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimit"
+"Valuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataT"
+"ypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.dataty"
+"pe.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needVal"
+"ueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0012L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/da"
+"tatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0014xq\u0000~\u0000\u0013ppq\u0000~\u0000\u001b\u0000\u0000sq\u0000~"
+"\u0000\u001dq\u0000~\u0000\"t\u0000\u0007integerq\u0000~\u0000\u001bsr\u0000,com.sun.msv.datatype.xsd.FractionD"
+"igitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.Da"
+"taTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000(ppq\u0000~\u0000\u001b\u0001\u0000sr"
+"\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"t"
+"\u0000\u0007decimalq\u0000~\u0000\u001bq\u0000~\u00001t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000+t\u0000\fminInclusive"
+"sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005v"
+"alueq\u0000~\u0000\u0014xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010\u0000\u0000\u0000\u0000sr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003p"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u0014xpq\u0000~\u0000#q\u0000~\u0000\u0017sr\u0000#com.sun.msv.grammar.Simp"
+"leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014x"
+"r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0007CenterXq\u0000~\u0000\u0017"
+"sq\u0000~\u0000\tppq\u0000~\u0000\u000fsq\u0000~\u0000=t\u0000\u0007CenterYq\u0000~\u0000\u0017sr\u0000\u001dcom.sun.msv.grammar.Ch"
+"oiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\tsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\fppsq\u0000~\u0000\u0010q\u0000~\u0000\u0017t\u0000\tDimensionq\u0000~\u0000\u001bq\u0000~\u0000!\u0000\u0000\u0000"
+"\u0000q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000#q\u0000~\u0000\u0017sq\u0000~\u0000=t\u0000\u0006Heightq\u0000~\u0000\u0017sr\u00000com.sun.msv.gr"
+"ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000G\u0001q\u0000"
+"~\u0000Psq\u0000~\u0000Dppsq\u0000~\u0000\tq\u0000~\u0000Hpsr\u0000\u001ccom.sun.msv.grammar.ValueExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000~\u0000\rL\u0000\u0004nameq\u0000~\u0000\u000eL\u0000\u0005valueq\u0000~\u0000&xq\u0000~\u0000\u0003ppsr\u0000%com.sun"
+".msv.datatype.xsd.SimpleURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"t\u0000\ranySi"
+"mpleTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001asq\u0000~\u0000;q\u0000~\u0000Xq\u0000~\u0000\"t\u0000\t-1.308997sq\u0000~\u0000=t\u0000\bR"
+"otationq\u0000~\u0000\u0017q\u0000~\u0000Psq\u0000~\u0000Dppsq\u0000~\u0000\tq\u0000~\u0000Hpq\u0000~\u0000Isq\u0000~\u0000=t\u0000\u0005Widthq\u0000~\u0000"
+"\u0017q\u0000~\u0000Psr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bex"
+"pTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr"
+"\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000"
+"\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expre"
+"ssionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000_q\u0000~\u0000\bq\u0000~\u0000\u0006q\u0000~\u0000Eq\u0000~\u0000\u0007q\u0000~\u0000\u0005q\u0000~\u0000Rx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
                super(context, "----------------");
            }

            protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return gmml.impl.CellShapeTypeImpl.GraphicsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "Rotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "CenterY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText5(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Rotation = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _CenterY = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Height = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _CenterX = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Width = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "Rotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "CenterY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText5(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  9 :
                            if (("Rotation" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            if (("CenterY" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  6 :
                            if (("Height" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  0 :
                            if (("CenterX" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  12 :
                            if (("Width" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "Rotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "CenterY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  11 :
                            if (("Rotation" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  14 :
                            if (("Width" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  5 :
                            if (("CenterY" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("CenterX" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("Height" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText5(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  15 :
                                revertToParentFromText(value);
                                return ;
                            case  10 :
                                state = 11;
                                eatText1(value);
                                return ;
                            case  9 :
                                attIdx = context.getAttribute("", "Rotation");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 12;
                                continue outer;
                            case  3 :
                                attIdx = context.getAttribute("", "CenterY");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  6 :
                                attIdx = context.getAttribute("", "Height");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText3(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  0 :
                                attIdx = context.getAttribute("", "CenterX");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case  4 :
                                state = 5;
                                eatText2(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText4(value);
                                return ;
                            case  7 :
                                state = 8;
                                eatText3(value);
                                return ;
                            case  13 :
                                state = 14;
                                eatText5(value);
                                return ;
                            case  12 :
                                attIdx = context.getAttribute("", "Width");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 15;
                                    eatText5(v);
                                    continue outer;
                                }
                                state = 15;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return gmml.impl.CellShapeTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "CenterX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "CenterX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  5 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("CenterX" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.CellShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.CellShapeTypeImpl.GraphicsTypeImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "CenterX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Notes = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
