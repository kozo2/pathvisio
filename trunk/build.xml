<?xml version="1.0"?>
<project name="PathVisio" default="compile-v2" basedir=".">
	
	<property name="src.dir" value="src"/>
        
	<property name="build.v1.dir" value="build/v1"/>
	<property name="build.v2.dir" value="build/v2"/>

        <property name="apidoc.dir" value="apidoc"/>
	<!-- <property name="dist.dir" value="dist"/> -->
	<property name="webstart.dir" value="webstart"/>
	<property name="lib.dir" value="lib"/>
	<property name="exec.perl" value="perl"/>
	<property name="svn.exec.svnversion" value="svnversion"/>
	<property name="exec.inno.setup" value="iscc"/>
	
	<path id="project.v1.class.path">
		<pathelement location="lib/swt-win32.jar"/>
		<pathelement location="lib/swt-linux.jar"/>
		<pathelement location="lib/jdom.jar"/>
		<pathelement location="lib/org.eclipse.core.commands.jar"/>
		<pathelement location="lib/org.eclipse.equinox.common.jar"/>
		<pathelement location="lib/org.eclipse.jface.jar"/>
		<pathelement location="lib/hsqldb.jar"/>
		<pathelement location="lib/junit.jar"/>
		<pathelement location="lib/BrowserLauncher.jar"/>
		<pathelement location="lib/resources.jar"/>
		<pathelement location="${build.v1.dir}"/>
		<pathelement location="${build.core.dir}"/>
	</path>

	<path id="project.v2.class.path">
		<pathelement location="lib/swt-win32.jar"/>
		<pathelement location="lib/swt-linux.jar"/>
		<pathelement location="lib/jdom.jar"/>
		<pathelement location="lib/JRI.jar"/>
		<pathelement location="lib/org.eclipse.core.commands.jar"/>
		<pathelement location="lib/org.eclipse.equinox.common.jar"/>
		<pathelement location="lib/org.eclipse.jface.jar"/>
		<pathelement location="lib/hsqldb.jar"/>
		<pathelement location="lib/junit.jar"/>
		<pathelement location="lib/BrowserLauncher.jar"/>
		<pathelement location="lib/resources.jar"/>
		<pathelement location="lib/R-resources.jar"/>
		<pathelement location="${build.v2.dir}"/>
		<pathelement location="${build.core.dir}"/>
	</path>

	<target name="prepare">
		<mkdir dir="${build.v1.dir}"/>
		<mkdir dir="${build.v2.dir}"/>
		<mkdir dir="${apidoc.dir}"/>
	</target>
	
	<target name="clean" description="Remove all generated files.">
		<delete dir="${build.v1.dir}"/>
		<delete dir="${build.v2.dir}"/>
		<delete dir="${build.core.dir}"/>
		<delete dir="${build.test.dir}"/>
		<delete dir="${apidoc.dir}"/>
		<delete dir="${webstart.dir}/www"/>
	</target>
	
	<target name="compile-v1" depends="prepare,resources-jar" description="Compile all sources">
		<javac srcdir="src" 
			includes="v1/**,core/**"
			destdir="build/v1">
			<classpath refid="project.v1.class.path"/>
		</javac>
	</target>

	<target name="compile-v2" depends="prepare,resources-jar" description="Compile all sources">
		<javac srcdir="src" 
                    includes="v2/**,core/**"
                    destdir="build/v2">
                    <classpath refid="project.v2.class.path"/>
		</javac>	
	</target>

	<target name="resources-jar" description="Generates jar with resources">
		<jar jarfile="lib/resources.jar">
			<fileset dir="." includes="backpage/*"/>
			<fileset dir="." includes="icons/*"/>
			<fileset dir="." includes="images/*"/>
			<fileset dir="." includes="GPML.xsd"/>
			<fileset dir="." includes="MAPPTmpl.gtp"/>
			<fileset dir="." includes="lib/JRI-lib/*"/>
		</jar>
		<jar jarfile="lib/R-resources.jar">
			<fileset dir="." includes="lib/R/**/*"/>
			<fileset dir="." includes="lib/JRI-lib/*"/>
		</jar>
		<jar jarfile="lib/swt-win32-lib.jar">
			<fileset dir="lib/swt-win32-lib" includes="*.dll"/>
		</jar>
		<jar jarfile="lib/swt-linux-lib.jar">
			<fileset dir="lib/swt-linux-lib" includes="*.so"/>
		</jar>
	</target>
	
	<target name="jar" depends="compile-v1,compile-v2" description="Generates executable jar file">
		<jar jarfile="pathvisio_v2.jar" manifest="src/MANIFEST.MF">
			<fileset dir="${build.v2.dir}" includes="**/*.class"/>			
		</jar>
		<jar jarfile="pathvisio_v1.jar" manifest="src/MANIFEST.MF">
			<fileset dir="${build.v1.dir}" includes="**/*.class"/>			
		</jar>
    </target>

	<target name="run-v1" depends="compile-v1">
		<java classname="gmmlVision.GmmlVisionMain" fork="true">
			<classpath refid="project.v1.class.path"/>
			<jvmarg value='-Djava.library.path=lib/swt-win32-lib'/>
		</java>
	</target>

	<target name="run-v2" depends="compile-v2">
		<java classname="gmmlVision.GmmlVisionMain" fork="true">
			<classpath refid="project.v2.class.path"/>
			<jvmarg value='-Djava.library.path=lib/swt-win32-lib'/>
		</java>
	</target>

	<target name="webstart" depends="jar,resources-jar" description="Sign jars and upload webstart files">
		<!-- Copy files needed for webstart !-->
		<copy file="pathvisio_v1.jar" toDir="${webstart.dir}/www"/>
		<copy file="pathvisio_v2.jar" toDir="${webstart.dir}/www"/>
		<signjar jar="pathvisio_v1.jar" lazy="true" 
			alias="PathVisio" storepass="PathVisio" keystore="${lib.dir}/visioKeyStore"/>
		<signjar jar="pathvisio_v2.jar" lazy="true" 
			alias="PathVisio" storepass="PathVisio" keystore="${lib.dir}/visioKeyStore"/>
                
		<copy toDir="${webstart.dir}/www" overwrite="true">
			<fileset dir="${lib.dir}" includes="*.jar"/>
		</copy>
		<signjar alias="PathVisio" lazy = "true" 
			storepass="PathVisio" keystore="${lib.dir}/visioKeyStore">
			<fileset dir="${webstart.dir}/www" includes="**/*.jar"/>
		</signjar>
		<copy file="${webstart.dir}/pathvisio_v1.jnlp" toDir="${webstart.dir}/www"/>
		<copy file="${webstart.dir}/pathvisio_v2.jnlp" toDir="${webstart.dir}/www"/>
                <!-- Run perl script to upload to server !-->
		<exec executable="${exec.perl}" dir="${webstart.dir}">
			<arg line="autoftp.pl"/>
		</exec>	
	</target>
	
	<target name="docs" depends="prepare" description="generate api-docs">
		<javadoc destdir="${apidoc.dir}">
			<classpath refid="project.class.path"/>
			<package name="gmmlVision"/>
			<package name="graphics"/>
			<package name="colorSet"/>
			<package name="util"/>
			<package name="data"/>
			<sourcepath location="${src.dir}"/>
		</javadoc>		
	</target>

        <!--
	<target name="dist" depends="jar-v1, jar-v2" description="Creates distribution zip and installer">

		--><!-- query the repository for the revision nr. !--><!--
		<exec executable="${svn.exec.svnversion}" outputproperty="subversion_revision" failifexecutionfails="false">
			<arg line="-n ."/>
		</exec>
		<echo>Current Revision ${subversion_revision}</echo>

		--><!-- create a windows installer using inno-setup and pathvisio.iss!--><!--
		<exec executable="${exec.inno.setup}">
			<arg line="pathvisio.iss"/>
		</exec>		
		<move file="${dist.dir}/PathVisio-Setup.exe" 
			tofile="${dist.dir}/PathVisio-Setup.${subversion_revision}.exe" 
			overwrite="true"/>			
	</target> -->
		
</project>
