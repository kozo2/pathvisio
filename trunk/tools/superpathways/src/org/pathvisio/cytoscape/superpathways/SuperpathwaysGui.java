// PathVisio,
// a tool for data visualization and analysis using Biological Pathways
// Copyright 2006-2009 BiGCaT Bioinformatics
//
// Licensed under the Apache License, Version 2.0 (the "License"); 
// you may not use this file except in compliance with the License. 
// You may obtain a copy of the License at 
// 
// http://www.apache.org/licenses/LICENSE-2.0 
//  
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
// See the License for the specific language governing permissions and 
// limitations under the License.
//

package org.pathvisio.cytoscape.superpathways;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;

import org.bridgedb.Organism;
import org.pathvisio.cytoscape.superpathways.SuperpathwaysClient.FindPathwaysByTextParameters;
import org.pathvisio.cytoscape.superpathways.SuperpathwaysClient.GetPathwayParameters;
import org.pathvisio.cytoscape.wikipathways.ResultProperty;
import org.pathvisio.debug.Logger;
import org.pathvisio.util.swing.ListWithPropertiesTableModel;
import org.pathvisio.util.swing.RowWithProperties;
import org.pathvisio.wikipathways.webservice.WSSearchResult;

import cytoscape.data.webservice.CyWebServiceEvent;
import cytoscape.data.webservice.CyWebServiceException;
import cytoscape.data.webservice.WebServiceClientManager;
import cytoscape.data.webservice.CyWebServiceEvent.WSEventType;

//public class SuperpathwaysGui extends JFrame implements ActionListener{ 
public class SuperpathwaysGui extends JFrame {

	final SuperpathwaysClient client;

	private static String ACTION_SEARCH = "Search";

	private static String ORGANISM_ALL = "All organisms";

	ResultRow selected;

	String clickedPathwayName = "not defined";

	String selectedPathwayName = "undefined";

	public SuperpathwaysGui(SuperpathwaysClient c) {
		frame = this;
		client = c;
		initComponents();

	}

	// the following code is generated in Netbean IDE
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		superpathwayPanel = new javax.swing.JTabbedPane();
		searchPane = new javax.swing.JPanel();
		stepLabel1 = new javax.swing.JLabel();
		searchText = new javax.swing.JTextField();
		organismCombo = new javax.swing.JComboBox();
		searchBtn = new javax.swing.JButton();
		hintLabel1 = new javax.swing.JLabel();
		resultScrolllPane1 = new javax.swing.JScrollPane();
		resultTable = new javax.swing.JTable();
		addBtn = new javax.swing.JButton();
		selectPanel = new javax.swing.JPanel();
		availablePathwaysScrollPane = new javax.swing.JScrollPane();
		availablePathwaysList = new javax.swing.JList();
		availablePathwaysListModel = new DefaultListModel();
		availablePathwaysLabel = new javax.swing.JLabel();
		selectedPathwaysLabel = new javax.swing.JLabel();

		selectedPathwaysScrollPane = new javax.swing.JScrollPane();
		selectedPathwaysList = new javax.swing.JList();
		selectedPathwaysListModel = new DefaultListModel();

		openBtn = new javax.swing.JButton();
		rightButton = new javax.swing.JButton();
		leftButton = new javax.swing.JButton();
		layoutPane = new javax.swing.JPanel();
		stepLabel2 = new javax.swing.JLabel();
		jRadioButton1 = new javax.swing.JRadioButton();
		jRadioButton2 = new javax.swing.JRadioButton();
		jRadioButton3 = new javax.swing.JRadioButton();
		jRadioButton4 = new javax.swing.JRadioButton();
		jRadioButton5 = new javax.swing.JRadioButton();
		jRadioButton6 = new javax.swing.JRadioButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Superpathways");
		setBackground(new java.awt.Color(255, 255, 255));

		superpathwayPanel.setToolTipText("");
		superpathwayPanel.setName("search_select_tab"); // NOI18N

		searchPane.setToolTipText("");

		stepLabel1.setBackground(new java.awt.Color(204, 204, 255));
		stepLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
		stepLabel1.setForeground(new java.awt.Color(102, 0, 0));
		stepLabel1
				.setText("Step 1: Search and select multiple pathways from WikiPahtways");

		searchText.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				searchTextActionPerformed(evt);
			}
		});

		resetOrganisms();

		searchBtn.setText("Search");
		searchBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				searchBtnActionPerformed(evt);
			}
		});

		hintLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
		hintLabel1
				.setText("You can search by: pathway name, gene/protein name, or any page content");

		resultTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

		resultTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent e) {
				if (e.getClickCount() == 1) {
					int row = resultTable.getSelectedRow();
					// ResultRow selected = tableModel.getRow(row);
					selected = tableModel.getRow(row);
					clickedPathwayName = selected
							.getProperty(ResultProperty.NAME);
					System.out.println(clickedPathwayName);
					// openNetwork(selected);
				}
			}
		});

		resultScrolllPane1.setViewportView(resultTable);

		addBtn.setText("Add");
		addBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addBtnActionPerformed(evt);
			}
		});

		selectPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
				javax.swing.BorderFactory
						.createTitledBorder("Please select pathways to merge"),
				"", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0,
						255))); // NOI18N

		availablePathwaysList
				.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		availablePathwaysList.setLayoutOrientation(JList.VERTICAL);
		availablePathwaysList.setVisibleRowCount(8);

		availablePathwaysScrollPane.setViewportView(availablePathwaysList);

		selectedPathwaysList
				.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		selectedPathwaysList.setLayoutOrientation(JList.VERTICAL);
		selectedPathwaysList.setVisibleRowCount(8);
		selectedPathwaysScrollPane.setViewportView(selectedPathwaysList);

		rightButton.setIcon(new javax.swing.ImageIcon(
				"D:\\JAVA-CODE\\Superpathway\\images\\right16.gif")); // NOI18N
		rightButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rightButtonActionPerformed(evt);
			}
		});

		leftButton.setIcon(new javax.swing.ImageIcon(
				"D:\\JAVA-CODE\\Superpathway\\images\\left16.gif")); // NOI18N
		leftButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				leftButtonActionPerformed(evt);
			}
		});

		availablePathwaysLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		availablePathwaysLabel.setForeground(new java.awt.Color(102, 0, 0));
		availablePathwaysLabel.setText("Available Pathways");

		selectedPathwaysLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		selectedPathwaysLabel.setForeground(new java.awt.Color(102, 0, 0));
		selectedPathwaysLabel.setText("Selected Pathways");

		javax.swing.GroupLayout selectPanelLayout = new javax.swing.GroupLayout(
				selectPanel);
		selectPanel.setLayout(selectPanelLayout);
		selectPanelLayout
				.setHorizontalGroup(selectPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								selectPanelLayout
										.createSequentialGroup()
										.addComponent(
												availablePathwaysScrollPane,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												139,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												selectPanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																leftButton,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																52,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																rightButton, 0,
																0,
																Short.MAX_VALUE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												selectedPathwaysScrollPane,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												158,
												javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(
								selectPanelLayout.createSequentialGroup()
										.addContainerGap().addComponent(
												availablePathwaysLabel).addGap(
												112, 112, 112).addComponent(
												selectedPathwaysLabel)));

		selectPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { availablePathwaysScrollPane,
						selectedPathwaysScrollPane });

		selectPanelLayout
				.setVerticalGroup(selectPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								selectPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												selectPanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																selectPanelLayout
																		.createSequentialGroup()
																		.addGap(
																				65,
																				65,
																				65)
																		.addComponent(
																				rightButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				leftButton))
														.addGroup(
																selectPanelLayout
																		.createSequentialGroup()
																		.addGroup(
																				selectPanelLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.BASELINE)
																						.addComponent(
																								availablePathwaysLabel)
																						.addComponent(
																								selectedPathwaysLabel))
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(
																				selectPanelLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING,
																								false)
																						.addComponent(
																								selectedPathwaysScrollPane)
																						.addComponent(
																								availablePathwaysScrollPane))))));

		selectPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { availablePathwaysLabel,
						selectedPathwaysLabel });

		openBtn.setText("Open");
		openBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				openBtnActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout searchPaneLayout = new javax.swing.GroupLayout(
				searchPane);
		searchPane.setLayout(searchPaneLayout);
		searchPaneLayout
				.setHorizontalGroup(searchPaneLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								searchPaneLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												searchPaneLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																selectPanel,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																resultScrolllPane1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																412,
																Short.MAX_VALUE)
														.addComponent(
																stepLabel1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																412,
																Short.MAX_VALUE)
														.addGroup(
																searchPaneLayout
																		.createSequentialGroup()
																		.addComponent(
																				searchText,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				189,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				organismCombo,
																				0,
																				146,
																				Short.MAX_VALUE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				searchBtn))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																searchPaneLayout
																		.createSequentialGroup()
																		.addComponent(
																				openBtn)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				addBtn))
														.addComponent(
																hintLabel1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addContainerGap()));
		searchPaneLayout
				.setVerticalGroup(searchPaneLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								searchPaneLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												stepLabel1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												22,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												hintLabel1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												26,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(19, 19, 19)
										.addGroup(
												searchPaneLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																searchText,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																23,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																organismCombo,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																22,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(searchBtn))
										.addGap(30, 30, 30)
										.addComponent(
												resultScrolllPane1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												179,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18)
										.addGroup(
												searchPaneLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(addBtn)
														.addComponent(openBtn))
										.addGap(33, 33, 33)
										.addComponent(
												selectPanel,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(53, 53, 53)));

		searchPaneLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { organismCombo, searchText });
		superpathwayPanel
				.addTab("Search/Select", null, searchPane,
						"search and select pathways that you want to merge from Wiki Pahtways");

		stepLabel2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
		stepLabel2.setForeground(new java.awt.Color(102, 0, 0));
		stepLabel2
				.setText("Step 2: Select  a pathway for which you want to group nodes");

		jRadioButton1.setText("name of pathway 1");

		jRadioButton2.setText("name of pathway 2");

		jRadioButton3.setText("name of pathway 3");

		jRadioButton4.setText("name of pathway 4");

		jRadioButton5.setText("name of pathway 5");

		jRadioButton6.setText("name of pathway 6");

		javax.swing.GroupLayout layoutPaneLayout = new javax.swing.GroupLayout(
				layoutPane);
		layoutPane.setLayout(layoutPaneLayout);
		layoutPaneLayout
				.setHorizontalGroup(layoutPaneLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layoutPaneLayout
										.createSequentialGroup()
										.addGroup(
												layoutPaneLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																layoutPaneLayout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addComponent(
																				stepLabel2))
														.addGroup(
																layoutPaneLayout
																		.createSequentialGroup()
																		.addGap(
																				65,
																				65,
																				65)
																		.addGroup(
																				layoutPaneLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								jRadioButton1)
																						.addComponent(
																								jRadioButton2)
																						.addComponent(
																								jRadioButton3)
																						.addComponent(
																								jRadioButton4)
																						.addComponent(
																								jRadioButton5)
																						.addComponent(
																								jRadioButton6))))
										.addContainerGap(85, Short.MAX_VALUE)));

		layoutPaneLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { jRadioButton1, jRadioButton2,
						jRadioButton3, jRadioButton4, jRadioButton5,
						jRadioButton6 });

		layoutPaneLayout.setVerticalGroup(layoutPaneLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layoutPaneLayout.createSequentialGroup().addGap(22, 22, 22)
						.addComponent(stepLabel2).addGap(39, 39, 39)
						.addComponent(jRadioButton1).addGap(18, 18, 18)
						.addComponent(jRadioButton2).addGap(18, 18, 18)
						.addComponent(jRadioButton3).addGap(18, 18, 18)
						.addComponent(jRadioButton4).addGap(18, 18, 18)
						.addComponent(jRadioButton5).addGap(27, 27, 27)
						.addComponent(jRadioButton6).addContainerGap(325,
								Short.MAX_VALUE)));

		layoutPaneLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { jRadioButton1, jRadioButton2,
						jRadioButton3, jRadioButton4, jRadioButton5,
						jRadioButton6 });

		superpathwayPanel.addTab("Custom Layout", null, layoutPane,
				"create a custom layout grouping nodes from the same pathway");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addGap(22, 22, 22).addComponent(
						superpathwayPanel,
						javax.swing.GroupLayout.PREFERRED_SIZE, 431,
						javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(22, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addGap(29, 29, 29).addComponent(
						superpathwayPanel,
						javax.swing.GroupLayout.PREFERRED_SIZE, 666,
						javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(20, Short.MAX_VALUE)));

		superpathwayPanel.getAccessibleContext().setAccessibleName(
				"search/select");

		pack();
	}// </editor-fold>

	private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {
		searchActionPerformed(evt);
	}

	private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {
		searchActionPerformed(evt);
	}

	private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {
    	System.out.println(clickedPathwayName);
    	if(!availablePathwaysListModel.contains(clickedPathwayName)){
    		availablePathwaysListModel.addElement(clickedPathwayName);
    		availablePathwaysList.setModel(availablePathwaysListModel);
    		if (availablePathwaysListModel.getSize()>0){
    			rightButton.setEnabled(true);
    		}
    	}
    	
    }

	private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {
		System.out.println("After clicking open button!");
		System.out.println(selected.getProperty(ResultProperty.NAME));
		openNetwork(selected);
	}

	private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {

		// display the selected item of the available pathways list to the
		// selected pathways list
		selectedPathwayName = (String) availablePathwaysList.getSelectedValue();
		System.out.println("After clicking the right button!");
		System.out.println(selectedPathwayName);
		selectedPathwaysListModel.addElement((Object) selectedPathwayName);
		selectedPathwaysList.setModel(selectedPathwaysListModel);
		if (selectedPathwaysListModel.getSize() > 0) {
			leftButton.setEnabled(true);
		}

		// removed the selected item in the availabe pathways list
		int index = availablePathwaysList.getSelectedIndex();
		availablePathwaysListModel.remove(index);

		int size = availablePathwaysListModel.getSize();

		if (size == 0) { // No pathway is left, disable rightButton.
			rightButton.setEnabled(false);

		} else { // Select an index.
			if (index == size) {
				// removed item in last position
				index--;
			}

			availablePathwaysList.setSelectedIndex(index);
			availablePathwaysList.ensureIndexIsVisible(index);
		}

	}

	private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// display the selected item of the selected pathways list to the
		// available pathways list
		selectedPathwayName = (String) selectedPathwaysList.getSelectedValue();
		System.out.println("After clicking the left button!");
		System.out.println(selectedPathwayName);
		availablePathwaysListModel.addElement((Object) selectedPathwayName);
		availablePathwaysList.setModel(availablePathwaysListModel);
		if (availablePathwaysListModel.getSize() > 0) {
			rightButton.setEnabled(true);
		}

		// removed the selected item in the selected pathways list
		int index = selectedPathwaysList.getSelectedIndex();
		selectedPathwaysListModel.remove(index);

		int size = selectedPathwaysListModel.getSize();

		if (size == 0) { // No pathway is left, disable rightButton.
			leftButton.setEnabled(false);

		} else { // Select an index.
			if (index == size) {
				// removed item in last position
				index--;
			}

			selectedPathwaysList.setSelectedIndex(index);
			selectedPathwaysList.ensureIndexIsVisible(index);
		}
	}

	// the code above is generated in Netbean IDE

	protected void resetOrganisms() {
		List<String> organisms = new ArrayList<String>();
		organisms.add(ORGANISM_ALL);
		try {
			organisms.addAll(Arrays.asList(client.listOrganisms()));
		} catch (Exception e) {
			Logger.log.error("Unable to get organisms for WikiPathways client",
					e);
		}

		organismCombo.setModel(new DefaultComboBoxModel(organisms.toArray()));
	}

	public void searchActionPerformed(java.awt.event.ActionEvent evt) {
		// String action = e.getActionCommand();
		// if(ACTION_SEARCH.equals(action)) {
		FindPathwaysByTextParameters request = new FindPathwaysByTextParameters();
		request.query = searchText.getText();
		String org = organismCombo.getSelectedItem().toString();
		if (!ORGANISM_ALL.equals(org)) {
			request.species = Organism.fromLatinName(org);
		}
		try {
			WebServiceClientManager
					.getCyWebServiceEventSupport()
					.fireCyWebServiceEvent(
							new CyWebServiceEvent<FindPathwaysByTextParameters>(
									client.getClientID(),
									WSEventType.SEARCH_DATABASE, request));

		} catch (CyWebServiceException ex) {
			switch (ex.getErrorCode()) {
			case NO_RESULT:
				JOptionPane.showMessageDialog(this,
						"The search didn't return any results", "No results",
						JOptionPane.INFORMATION_MESSAGE);
				break;
			case OPERATION_NOT_SUPPORTED:
			case REMOTE_EXEC_FAILED:
				JOptionPane.showMessageDialog(this, "Error: "
						+ ex.getErrorCode() + ". See log for details", "Error",
						JOptionPane.ERROR_MESSAGE);
				break;
			}
			ex.printStackTrace();
		}
		// }
	}

	private void openNetwork(ResultRow selected) {
		try {
			GetPathwayParameters request = new GetPathwayParameters();
			WSSearchResult result = selected.getResult();
			request.id = result.getId();
			request.revision = Integer.parseInt(result.getRevision());
			WebServiceClientManager.getCyWebServiceEventSupport()
					.fireCyWebServiceEvent(
							new CyWebServiceEvent(client.getClientID(),
									WSEventType.IMPORT_NETWORK, request));
		} catch (CyWebServiceException ex) {
			JOptionPane.showMessageDialog(SuperpathwaysGui.this, "Error: "
					+ ex.getErrorCode() + ". See error log for details",
					"Error", JOptionPane.ERROR_MESSAGE);
		}
	}

	public void setResults(WSSearchResult[] results) {

		tableModel = new ListWithPropertiesTableModel<ResultProperty, ResultRow>();
		if (results != null) {
			tableModel.setColumns(new ResultProperty[] { ResultProperty.NAME,
					ResultProperty.ORGANISM, });

			resultTable.setModel(tableModel);
			for (WSSearchResult r : results) {
				tableModel.addRow(new ResultRow(r));
			}
		}
		resultTable.setModel(tableModel);
		System.out.println("Superpathways!");

	}

	private javax.swing.JFrame frame;

	private javax.swing.JButton addBtn;

	private javax.swing.JButton openBtn;

	private javax.swing.JList availablePathwaysList;

	private javax.swing.JLabel availablePathwaysLabel;

	private javax.swing.DefaultListModel availablePathwaysListModel;

	private javax.swing.JScrollPane availablePathwaysScrollPane;

	private javax.swing.JLabel hintLabel1;

	private javax.swing.JRadioButton jRadioButton1;

	private javax.swing.JRadioButton jRadioButton2;

	private javax.swing.JRadioButton jRadioButton3;

	private javax.swing.JRadioButton jRadioButton4;

	private javax.swing.JRadioButton jRadioButton5;

	private javax.swing.JRadioButton jRadioButton6;

	private javax.swing.JPanel layoutPane;

	private javax.swing.JButton leftButton;

	private javax.swing.JComboBox organismCombo;

	private javax.swing.JScrollPane resultScrolllPane1;

	private javax.swing.JTable resultTable;

	private javax.swing.JButton rightButton;

	private javax.swing.JButton searchBtn;

	private javax.swing.JPanel searchPane;

	private javax.swing.JTextField searchText;

	private javax.swing.JPanel selectPanel;

	private javax.swing.JList selectedPathwaysList;

	private javax.swing.DefaultListModel selectedPathwaysListModel;

	private javax.swing.JLabel selectedPathwaysLabel;

	private javax.swing.JScrollPane selectedPathwaysScrollPane;

	private javax.swing.JLabel stepLabel1;

	private javax.swing.JLabel stepLabel2;

	private javax.swing.JTabbedPane superpathwayPanel;

	// End of variables declaration
	ListWithPropertiesTableModel<ResultProperty, ResultRow> tableModel;

	class ResultRow implements RowWithProperties<ResultProperty> {
		WSSearchResult result;

		public ResultRow(WSSearchResult result) {
			this.result = result;
		}

		public WSSearchResult getResult() {
			return result;
		}

		public String getProperty(ResultProperty prop) {
			switch (prop) {
			case NAME:
				return result.getName();
			case ORGANISM:
				return result.getSpecies();
			case SCORE:
				return Double.toString(result.getScore());
			case URL:
				return result.getUrl();
			}
			return null;
		}
	}

}