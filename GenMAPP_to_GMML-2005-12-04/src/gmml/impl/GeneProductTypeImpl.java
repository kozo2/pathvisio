//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.19 at 03:49:42 PM CEST 
//


package gmml.impl;

public class GeneProductTypeImpl
    extends gmml.impl.NamedBaseElementImpl
    implements gmml.GeneProductType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected java.lang.String _GeneProductDataSource;
    protected java.lang.String _Comment;
    protected gmml.GeneProductType.GraphicsType _Graphics;
    protected java.lang.String _BackpageHead;
    protected java.lang.String _Notes;
    protected java.lang.String _GeneID;
    protected java.lang.String _Xref;
    public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
    private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0005L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0006t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\f\u0001q\u0000~\u0000\u0010t\u0000\tmaxLength\u0000\u0000\u0000\u0014");
    private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0006L\u0000\btypeNameq\u0000~\u0000\u0006L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0007t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\r\u0001q\u0000~\u0000\u0011t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u000ft\u0000\fGeneOntologyt\u0000\u0007FlyBaset\u0000\u0004Affyt\u0000\u0006RefSeqt\u0000\u0003SGDt\u0000\u0004TAIRt\u0000\bInterProt\u0000\u0003MGIt\u0000\u0003RGDt\u0000\tSwissPrott\u0000\u0007UniGenet\u0000\bWormBaset\u0000\u0004ZFINt\u0000\tLocusLinkt\u0000\u0007GenBankx");
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (gmml.GeneProductType.class);
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public java.lang.String getGeneProductDataSource() {
        return _GeneProductDataSource;
    }

    public void setGeneProductDataSource(java.lang.String value) {
        _GeneProductDataSource = value;
    }

    public java.lang.String getComment() {
        return _Comment;
    }

    public void setComment(java.lang.String value) {
        _Comment = value;
    }

    public gmml.GeneProductType.GraphicsType getGraphics() {
        return _Graphics;
    }

    public void setGraphics(gmml.GeneProductType.GraphicsType value) {
        _Graphics = value;
    }

    public java.lang.String getBackpageHead() {
        return _BackpageHead;
    }

    public void setBackpageHead(java.lang.String value) {
        _BackpageHead = value;
    }

    public java.lang.String getNotes() {
        return _Notes;
    }

    public void setNotes(java.lang.String value) {
        _Notes = value;
    }

    public java.lang.String getGeneID() {
        return _GeneID;
    }

    public void setGeneID(java.lang.String value) {
        _GeneID = value;
    }

    public java.lang.String getXref() {
        return _Xref;
    }

    public void setXref(java.lang.String value) {
        _Xref = value;
    }

    public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
        return new gmml.impl.GeneProductTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_Notes!= null) {
            context.startElement("", "Notes");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Notes), "Notes");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Comment!= null) {
            context.startElement("", "Comment");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment), "Comment");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "Graphics");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endElement();
    }

    public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_BackpageHead!= null) {
            context.startAttribute("", "BackpageHead");
            try {
                context.text(((java.lang.String) _BackpageHead), "BackpageHead");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_GeneID!= null) {
            context.startAttribute("", "GeneID");
            try {
                context.text(((java.lang.String) _GeneID), "GeneID");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "GeneProduct-Data-Source");
        if (_GeneProductDataSource instanceof java.lang.String) {
            try {
                context.text(((java.lang.String) _GeneProductDataSource), "GeneProductDataSource");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        } else {
            if (_GeneProductDataSource instanceof java.lang.String) {
                try {
                    context.text(((java.lang.String) _GeneProductDataSource), "GeneProductDataSource");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            } else {
                gmml.impl.runtime.Util.handleTypeMismatchError(context, this, "GeneProductDataSource", _GeneProductDataSource);
            }
        }
        context.endAttribute();
        context.startAttribute("", "Type");
        try {
            context.text(((java.lang.String) _Type), "Type");
        } catch (java.lang.Exception e) {
            gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Xref!= null) {
            context.startAttribute("", "Xref");
            try {
                context.text(((java.lang.String) _Xref), "Xref");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
    }

    public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (gmml.GeneProductType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004n"
+"amet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.d"
+"atatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.su"
+"n.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/ms"
+"v/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.X"
+"SDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;"
+"L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000\u0000t\u0000\bNoteTypesr\u00005com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000#com.sun.msv.d"
+"atatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun"
+".msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.ms"
+"v.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000%\u0001\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.gramma"
+"r.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun"
+".msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespace"
+"URIq\u0000~\u0000\u001expq\u0000~\u0000+q\u0000~\u0000!sq\u0000~\u0000\rppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psq\u0000~\u0000"
+"\u0016ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\'q\u0000"
+"~\u0000*t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u00006q\u0000~\u0000*sr\u0000#com.sun.ms"
+"v.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fname"
+"spaceURIq\u0000~\u0000\u001exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt"
+"\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.su"
+"n.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003s"
+"q\u0000~\u0000\u0013\u0001q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0005Notesq\u0000~\u0000!q\u0000~\u0000@sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0016ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithV"
+"alueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.D"
+"ataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckF"
+"lagL\u0000\bbaseTypeq\u0000~\u0000\u001cL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/x"
+"sd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001exq\u0000~\u0000\u001dq\u0000~\u0000!t\u0000\u000bCommentTypeq\u0000"
+"~\u0000%\u0000\u0000q\u0000~\u0000)q\u0000~\u0000)t\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000Mq\u0000~\u0000!sq\u0000~\u0000\rpp"
+"sq\u0000~\u00001q\u0000~\u0000\u0014pq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0007Commentq\u0000~\u0000!q\u0000~\u0000@sq\u0000~\u0000\u000fp"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.grammar.OneOrMore"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003"
+"expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psq\u0000~\u00001q\u0000~\u0000\u0014psr\u00002com.sun.msv.grammar.Expr"
+"ession$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Aq\u0000~\u0000]sr\u0000 com"
+".sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000;q\u0000~\u0000@sq\u0000~\u0000:t\u0000!"
+"gmml.GeneProductType.GraphicsTypet\u0000+http://java.sun.com/jaxb"
+"/xjc/dummy-elementssq\u0000~\u0000\rppsq\u0000~\u00001q\u0000~\u0000\u0014pq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:"
+"t\u0000\bGraphicsq\u0000~\u0000!sq\u0000~\u00001ppsq\u0000~\u0000\u0016ppsq\u0000~\u0000Hq\u0000~\u0000!t\u0000\bNameTypeq\u0000~\u0000%\u0001"
+"\u0000q\u0000~\u0000)q\u0000~\u0000)q\u0000~\u0000N\u0000\u0000\u0000\u0014q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000jq\u0000~\u0000!sq\u0000~\u0000:t\u0000\u0004Nameq\u0000~\u0000!s"
+"q\u0000~\u0000\rppsq\u0000~\u00001q\u0000~\u0000\u0014psq\u0000~\u0000\u0016ppq\u0000~\u0000)q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000+q\u0000~\u0000*sq\u0000~\u0000:t"
+"\u0000\fBackpageHeadq\u0000~\u0000!q\u0000~\u0000@sq\u0000~\u0000\rppsq\u0000~\u00001q\u0000~\u0000\u0014pq\u0000~\u0000hsq\u0000~\u0000:t\u0000\u0006Ge"
+"neIDq\u0000~\u0000!q\u0000~\u0000@sq\u0000~\u00001ppsq\u0000~\u0000\u0016ppsr\u0000\"com.sun.msv.datatype.xsd.U"
+"nionType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\u000bmemberTypest\u0000*[Lcom/sun/msv/datatype/x"
+"sd/XSDatatypeImpl;xq\u0000~\u0000(q\u0000~\u0000!t\u0000\u0019GeneProductDataSourceTypeq\u0000~"
+"\u00008ur\u0000*[Lcom.sun.msv.datatype.xsd.XSDatatypeImpl;H\u001c\u00ad{pzHw\u0002\u0000\u0000x"
+"p\u0000\u0000\u0000\u0002sq\u0000~\u0000Hq\u0000~\u0000!pq\u0000~\u0000%\u0000\u0000q\u0000~\u0000)q\u0000~\u0000)q\u0000~\u0000N\u0000\u0000\u0000\u0014sr\u0000)com.sun.msv.d"
+"atatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/uti"
+"l/Set;xq\u0000~\u0000Iq\u0000~\u0000!pq\u0000~\u0000%\u0000\u0000q\u0000~\u0000)q\u0000~\u0000)t\u0000\u000benumerationsr\u0000\u0011java.ut"
+"il.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u000ft\u0000\fGeneOntologyt\u0000\u0007FlyBa"
+"set\u0000\u0004Affyt\u0000\u0006RefSeqt\u0000\u0003SGDt\u0000\u0004TAIRt\u0000\bInterProt\u0000\u0003MGIt\u0000\u0003RGDt\u0000\tSwi"
+"ssPrott\u0000\u0007UniGenet\u0000\bWormBaset\u0000\u0004ZFINt\u0000\tLocusLinkt\u0000\u0007GenBankxq\u0000~"
+"\u0000-psq\u0000~\u0000:t\u0000\u0017GeneProduct-Data-Sourceq\u0000~\u0000!sq\u0000~\u00001ppsq\u0000~\u0000\u0016ppsq\u0000~"
+"\u0000\u0081q\u0000~\u0000!pq\u0000~\u0000%\u0000\u0000q\u0000~\u0000)q\u0000~\u0000)q\u0000~\u0000\u0084sq\u0000~\u0000\u0085w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0007complex"
+"t\u0000\u0007unknownt\u0000\u0007proteint\u0000\u0003rnaxq\u0000~\u0000-sq\u0000~\u0000.t\u0000\u000estring-derivedq\u0000~\u0000!"
+"sq\u0000~\u0000:t\u0000\u0004Typeq\u0000~\u0000!sq\u0000~\u0000\rppsq\u0000~\u00001q\u0000~\u0000\u0014pq\u0000~\u0000psq\u0000~\u0000:t\u0000\u0004Xrefq\u0000~\u0000"
+"!q\u0000~\u0000@sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bex"
+"pTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr"
+"\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000"
+"\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expre"
+"ssionPool;xp\u0000\u0000\u0000\u0015\u0001pq\u0000~\u0000\u000eq\u0000~\u0000Fq\u0000~\u0000\u0007q\u0000~\u0000\bq\u0000~\u0000Dq\u0000~\u0000\u0005q\u0000~\u0000\u0015q\u0000~\u0000\u000bq\u0000"
+"~\u0000\tq\u0000~\u0000Wq\u0000~\u0000\nq\u0000~\u0000tq\u0000~\u0000\fq\u0000~\u0000\u00a4q\u0000~\u0000Zq\u0000~\u00000q\u0000~\u0000Pq\u0000~\u0000cq\u0000~\u0000\u0006q\u0000~\u0000nq\u0000"
+"~\u0000Ux"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class GraphicsTypeImpl implements gmml.GeneProductType.GraphicsType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
    {

        protected java.math.BigInteger _Width;
        protected java.math.BigInteger _Height;
        protected java.math.BigInteger _CenterY;
        protected java.math.BigInteger _CenterX;
        public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (gmml.GeneProductType.GraphicsType.class);
        }

        public java.math.BigInteger getWidth() {
            if (_Width == null) {
                return javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.DatatypeConverterImpl.installHook("600"));
            } else {
                return _Width;
            }
        }

        public void setWidth(java.math.BigInteger value) {
            _Width = value;
        }

        public java.math.BigInteger getHeight() {
            if (_Height == null) {
                return javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.DatatypeConverterImpl.installHook("300"));
            } else {
                return _Height;
            }
        }

        public void setHeight(java.math.BigInteger value) {
            _Height = value;
        }

        public java.math.BigInteger getCenterY() {
            return _CenterY;
        }

        public void setCenterY(java.math.BigInteger value) {
            _CenterY = value;
        }

        public java.math.BigInteger getCenterX() {
            return _CenterX;
        }

        public void setCenterX(java.math.BigInteger value) {
            _CenterX = value;
        }

        public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            return new gmml.impl.GeneProductTypeImpl.GraphicsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "CenterX");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CenterX)), "CenterX");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "CenterY");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CenterY)), "CenterY");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Height!= null) {
                context.startAttribute("", "Height");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Height)), "Height");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_Width!= null) {
                context.startAttribute("", "Width");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Width)), "Width");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
        }

        public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (gmml.GeneProductType.GraphicsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/ms"
+"v/grammar/NameClass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000"
+"~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\'com.su"
+"n.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000"
+"\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom"
+"/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datatyp"
+"e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/"
+"String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype"
+"/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\nCoordinatesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000/com."
+"sun.msv.datatype.xsd.NonNegativeIntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000$co"
+"m.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv"
+".datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000"
+"\u0011xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0012t\u0000 h"
+"ttp://www.w3.org/2001/XMLSchemat\u0000\u0012nonNegativeIntegerq\u0000~\u0000\u001asr\u0000"
+"*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#co"
+"m.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012"
+"Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithV"
+"alueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.D"
+"ataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckF"
+"lagL\u0000\bbaseTypeq\u0000~\u0000\u0011L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/x"
+"sd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0013xq\u0000~\u0000\u0012ppq\u0000~\u0000\u001a\u0000\u0000sq\u0000~\u0000\u001cq\u0000~\u0000!t"
+"\u0000\u0007integerq\u0000~\u0000\u001asr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWi"
+"thLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\'ppq\u0000~\u0000\u001a\u0001\u0000sr\u0000#com.su"
+"n.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000!t\u0000\u0007decima"
+"lq\u0000~\u0000\u001aq\u0000~\u00000t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000*t\u0000\fminInclusivesr\u0000)com."
+"sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000"
+"\u0013xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.gr"
+"ammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom"
+".sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnames"
+"paceURIq\u0000~\u0000\u0013xpq\u0000~\u0000\"q\u0000~\u0000\u0016sr\u0000#com.sun.msv.grammar.SimpleNameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xr\u0000\u001dcom.s"
+"un.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0007CenterXq\u0000~\u0000\u0016sq\u0000~\u0000\bpp"
+"q\u0000~\u0000\u000esq\u0000~\u0000<t\u0000\u0007CenterYq\u0000~\u0000\u0016sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\bsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005v"
+"aluexp\u0000psq\u0000~\u0000\u000bppsq\u0000~\u0000\u000fq\u0000~\u0000\u0016t\u0000\tDimensionq\u0000~\u0000\u001aq\u0000~\u0000 \u0000\u0000\u0000\u0000q\u0000~\u00009sq"
+"\u0000~\u0000:q\u0000~\u0000\"q\u0000~\u0000\u0016sq\u0000~\u0000<t\u0000\u0006Heightq\u0000~\u0000\u0016sr\u00000com.sun.msv.grammar.Ex"
+"pression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000F\u0001q\u0000~\u0000Osq\u0000~\u0000"
+"Cppsq\u0000~\u0000\bq\u0000~\u0000Gpq\u0000~\u0000Hsq\u0000~\u0000<t\u0000\u0005Widthq\u0000~\u0000\u0016q\u0000~\u0000Osr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
+"L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000"
+"Qq\u0000~\u0000\u0007q\u0000~\u0000Dq\u0000~\u0000\u0005q\u0000~\u0000\u0006x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------");
            }

            protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return gmml.impl.GeneProductTypeImpl.GraphicsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "CenterY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  12 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText4(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _CenterY = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Width = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _CenterX = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Height = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "CenterY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  12 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText4(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("CenterY" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  9 :
                            if (("Width" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  0 :
                            if (("CenterX" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  12 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  6 :
                            if (("Height" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "CenterY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  8 :
                            if (("Height" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  5 :
                            if (("CenterY" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  12 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText4(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  2 :
                            if (("CenterX" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  11 :
                            if (("Width" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                attIdx = context.getAttribute("", "CenterY");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "Width");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 12;
                                continue outer;
                            case  0 :
                                attIdx = context.getAttribute("", "CenterX");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                            case  4 :
                                state = 5;
                                eatText1(value);
                                return ;
                            case  12 :
                                revertToParentFromText(value);
                                return ;
                            case  6 :
                                attIdx = context.getAttribute("", "Height");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText4(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  10 :
                                state = 11;
                                eatText2(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText3(value);
                                return ;
                            case  7 :
                                state = 8;
                                eatText4(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return gmml.impl.GeneProductTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "BackpageHead");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  25 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "Xref");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "CenterX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "GeneID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  22 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  19 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BackpageHead = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Xref = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _GeneID = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  24 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "BackpageHead");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  25 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 22;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "Xref");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "CenterX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "GeneID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((gmml.impl.NamedBaseElementImpl)gmml.impl.GeneProductTypeImpl.this).new Unmarshaller(context)), 16, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        if (("BackpageHead" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        if (("GeneProduct-Data-Source" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  25 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        if (("Xref" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  23 :
                        if (("CenterX" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.GeneProductTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.GeneProductTypeImpl.GraphicsTypeImpl.class), 24, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("GeneID" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        if (("Xref" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("GeneProduct-Data-Source" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("BackpageHead" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "BackpageHead");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("GeneID" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  25 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "Xref");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "CenterX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "GeneID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  11 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            state = 11;
                            eatText4(value);
                            return ;
                        case  20 :
                            state = 21;
                            eatText5(value);
                            return ;
                        case  17 :
                            state = 18;
                            eatText6(value);
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "Name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "BackpageHead");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  25 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "Xref");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText2(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  7 :
                            if (___dt0 .isValid(value, null)) {
                                state = 8;
                                eatText7(value);
                                return ;
                            }
                            if (___dt1 .isValid(value, null)) {
                                state = 8;
                                eatText8(value);
                                return ;
                            }
                            break;
                        case  13 :
                            state = 14;
                            eatText2(value);
                            return ;
                        case  23 :
                            attIdx = context.getAttribute("", "CenterX");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "GeneID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText3(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText3(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  16 :
                            state = 19;
                            continue outer;
                        case  19 :
                            state = 22;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Notes = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _GeneProductDataSource = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _GeneProductDataSource = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
