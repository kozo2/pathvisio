//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.19 at 03:49:42 PM CEST 
//


package gmml.impl;

public class ArcTypeImpl
    extends gmml.impl.BaseElementImpl
    implements gmml.ArcType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
{

    protected java.lang.String _Comment;
    protected gmml.ArcType.GraphicsType _Graphics;
    protected java.lang.String _Notes;
    public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (gmml.ArcType.class);
    }

    public java.lang.String getComment() {
        return _Comment;
    }

    public void setComment(java.lang.String value) {
        _Comment = value;
    }

    public gmml.ArcType.GraphicsType getGraphics() {
        return _Graphics;
    }

    public void setGraphics(gmml.ArcType.GraphicsType value) {
        _Graphics = value;
    }

    public java.lang.String getNotes() {
        return _Notes;
    }

    public void setNotes(java.lang.String value) {
        _Notes = value;
    }

    public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
        return new gmml.impl.ArcTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_Notes!= null) {
            context.startElement("", "Notes");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Notes), "Notes");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Comment!= null) {
            context.startElement("", "Comment");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment), "Comment");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "Graphics");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endElement();
    }

    public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
    }

    public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (gmml.ArcType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.Dat"
+"aExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exc"
+"eptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\'c"
+"om.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalVal"
+"uexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000"
+")Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.da"
+"tatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/"
+"lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dat"
+"atype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\bNoteTypesr\u00005com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000#c"
+"om.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysVali"
+"dxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017t\u0000 h"
+"ttp://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\u001f\u0001\u0000\u0000\u0000\u0000sr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003p"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000%q\u0000~\u0000\u001bsq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv.gram"
+"mar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u000epsq\u0000~\u0000\u0010ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u00000q\u0000~\u0000$sr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"
+"cesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000:sq\u0000~\u00004t\u0000\u0005Notesq\u0000~\u0000\u001bq\u0000~\u0000:sq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\tq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLeng"
+"thFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.D"
+"ataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.da"
+"tatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012nee"
+"dValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0016L\u0000\fconcreteTypet\u0000\'Lcom/sun/ms"
+"v/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0018xq\u0000~\u0000\u0017q\u0000~\u0000\u001bt\u0000\u000bC"
+"ommentTypeq\u0000~\u0000\u001f\u0000\u0000q\u0000~\u0000#q\u0000~\u0000#t\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u0000Gq"
+"\u0000~\u0000\u001bsq\u0000~\u0000\u0007ppsq\u0000~\u0000+q\u0000~\u0000\u000epq\u0000~\u0000-q\u0000~\u00006q\u0000~\u0000:sq\u0000~\u00004t\u0000\u0007Commentq\u0000~\u0000\u001b"
+"q\u0000~\u0000:sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsq\u0000~\u0000+q\u0000~\u0000\u000epsr\u00002com.sun.msv."
+"grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000;"
+"q\u0000~\u0000Wsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000"
+"~\u0000:sq\u0000~\u00004t\u0000\u0019gmml.ArcType.GraphicsTypet\u0000+http://java.sun.com/"
+"jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007ppsq\u0000~\u0000+q\u0000~\u0000\u000epq\u0000~\u0000-q\u0000~\u00006q\u0000~\u0000:sq"
+"\u0000~\u00004t\u0000\bGraphicsq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$C"
+"losedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHas"
+"h\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv"
+"/grammar/ExpressionPool;xp\u0000\u0000\u0000\f\u0001pq\u0000~\u0000\bq\u0000~\u0000@q\u0000~\u0000>q\u0000~\u0000\u000fq\u0000~\u0000\u0005q\u0000~"
+"\u0000Qq\u0000~\u0000\u0006q\u0000~\u0000Tq\u0000~\u0000*q\u0000~\u0000Jq\u0000~\u0000]q\u0000~\u0000Ox"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class GraphicsTypeImpl implements gmml.ArcType.GraphicsType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
    {

        protected java.lang.Object _Color;
        protected java.math.BigInteger _StartY;
        protected java.math.BigInteger _Width;
        protected java.math.BigInteger _Height;
        protected java.math.BigInteger _StartX;
        protected java.math.BigDecimal _Rotation;
        public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
        private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0004L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000&com.sun.msv.datatype.xsd.HexBinaryType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.BinaryBaseType\u00a7\u00ce\u000e\u0097^\u00afW\u0011\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\thexBinaryq\u0000~\u0000\n\u0000\u0000\u0000\u0000");
        private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0006L\u0000\btypeNameq\u0000~\u0000\u0006L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0007t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\r\u0001q\u0000~\u0000\u0011t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u0010t\u0000\u0006Silvert\u0000\u0005Olivet\u0000\u0004Aquat\u0000\u0006Maroont\u0000\u0004Limet\u0000\u0007Fuchsiat\u0000\u0006Purplet\u0000\u0004Navyt\u0000\u0005Greent\u0000\u0004Tealt\u0000\u0005Blackt\u0000\u0005Whitet\u0000\u0003Redt\u0000\u0004Bluet\u0000\u0004Grayt\u0000\u0006Yellowx");
        private final static org.relaxng.datatype.Datatype ___dt2 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0004L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000\u0002xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integerq\u0000~\u0000\nsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0002L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0004xq\u0000~\u0000\u0003ppq\u0000~\u0000\n\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\rq\u0000~\u0000\u0010t\u0000\u0007decimalq\u0000~\u0000\nq\u0000~\u0000\u0018t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (gmml.ArcType.GraphicsType.class);
        }

        public java.lang.Object getColor() {
            return _Color;
        }

        public void setColor(java.lang.Object value) {
            _Color = value;
        }

        public java.math.BigInteger getStartY() {
            return _StartY;
        }

        public void setStartY(java.math.BigInteger value) {
            _StartY = value;
        }

        public java.math.BigInteger getWidth() {
            return _Width;
        }

        public void setWidth(java.math.BigInteger value) {
            _Width = value;
        }

        public java.math.BigInteger getHeight() {
            return _Height;
        }

        public void setHeight(java.math.BigInteger value) {
            _Height = value;
        }

        public java.math.BigInteger getStartX() {
            return _StartX;
        }

        public void setStartX(java.math.BigInteger value) {
            _StartX = value;
        }

        public java.math.BigDecimal getRotation() {
            return _Rotation;
        }

        public void setRotation(java.math.BigDecimal value) {
            _Rotation = value;
        }

        public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            return new gmml.impl.ArcTypeImpl.GraphicsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_Color!= null) {
                context.startAttribute("", "Color");
                if (_Color instanceof byte[]) {
                    try {
                        context.text(com.sun.msv.datatype.xsd.HexBinaryType.save(((byte[]) _Color)), "Color");
                    } catch (java.lang.Exception e) {
                        gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    if (_Color instanceof java.lang.String) {
                        try {
                            context.text(((java.lang.String) _Color), "Color");
                        } catch (java.lang.Exception e) {
                            gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        if (_Color instanceof java.math.BigInteger) {
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Color)), "Color");
                            } catch (java.lang.Exception e) {
                                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                        } else {
                            gmml.impl.runtime.Util.handleTypeMismatchError(context, this, "Color", _Color);
                        }
                    }
                }
                context.endAttribute();
            }
            context.startAttribute("", "Height");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Height)), "Height");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_Rotation!= null) {
                context.startAttribute("", "Rotation");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Rotation)), "Rotation");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "StartX");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartX)), "StartX");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "StartY");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartY)), "StartY");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "Width");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Width)), "Width");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (gmml.ArcType.GraphicsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLco"
+"m/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5"
+"\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004name"
+"t\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.data"
+"type.xsd.UnionType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\u000bmemberTypest\u0000*[Lcom/sun/msv/"
+"datatype/xsd/XSDatatypeImpl;xr\u0000%com.sun.msv.datatype.xsd.Con"
+"creteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeI"
+"mpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNam"
+"eq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePr"
+"ocessor;xpt\u0000\u0000t\u0000\tColorTypesr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpur\u0000*[Lcom.sun.msv.datatype"
+".xsd.XSDatatypeImpl;H\u001c\u00ad{pzHw\u0002\u0000\u0000xp\u0000\u0000\u0000\u0003sr\u0000\'com.sun.msv.datatyp"
+"e.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv."
+"datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/data"
+"type/xsd/XSDatatypeImpl;xq\u0000~\u0000\u0018q\u0000~\u0000\u001cpq\u0000~\u0000 sr\u0000&com.sun.msv.dat"
+"atype.xsd.HexBinaryType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.BinaryBaseType\u00a7\u00ce\u000e\u0097^\u00afW\u0011\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Bui"
+"ltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017t\u0000 http://www.w3.org/2001/XML"
+"Schemat\u0000\thexBinaryq\u0000~\u0000 \u0000\u0000\u0000\u0000sr\u0000)com.sun.msv.datatype.xsd.Enum"
+"erationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.su"
+"n.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z"
+"\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000%L\u0000\fconcre"
+"teTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetName"
+"q\u0000~\u0000\u0019xq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001f\u0000\u0000sr\u0000#com.sun.msv.datatype.xs"
+"d.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000)q\u0000~\u0000+t\u0000\u0006stringq"
+"\u0000~\u00004\u0001q\u0000~\u00006t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f"
+"\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u0010t\u0000\u0006Silvert\u0000\u0005Olivet\u0000\u0004Aquat\u0000\u0006Maroont\u0000\u0004Limet\u0000\u0007Fuchs"
+"iat\u0000\u0006Purplet\u0000\u0004Navyt\u0000\u0005Greent\u0000\u0004Tealt\u0000\u0005Blackt\u0000\u0005Whitet\u0000\u0003Redt\u0000\u0004Bl"
+"uet\u0000\u0004Grayt\u0000\u0006Yellowxsq\u0000~\u0000#q\u0000~\u0000\u001cpq\u0000~\u0000 sr\u0000$com.sun.msv.datatype"
+".xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Inte"
+"gerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000%xq\u0000~\u0000)q\u0000~\u0000+t\u0000\u0007int"
+"egerq\u0000~\u0000 sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLex"
+"icalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u00000ppq\u0000~\u0000 \u0001\u0000sr\u0000#com.sun.msv"
+".datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000+t\u0000\u0007decimalq\u0000~\u0000"
+" q\u0000~\u0000Tt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expre"
+"ssion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pppsr\u0000#com.sun.msv.g"
+"rammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespa"
+"ceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0005C"
+"olorq\u0000~\u0000\u001csr\u00000com.sun.msv.grammar.Expression$EpsilonExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000^sq\u0000~\u0000\fppsq\u0000~\u0000\u0011ppsq\u0000~\u0000#q\u0000~\u0000\u001ct\u0000\t"
+"Dimensionq\u0000~\u0000 sr\u0000/com.sun.msv.datatype.xsd.NonNegativeIntege"
+"rType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Lq\u0000~\u0000+t\u0000\u0012nonNegativeIntegerq\u0000~\u0000 sr\u0000*com"
+".sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.su"
+"n.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljav"
+"a/lang/Object;xq\u0000~\u0000/ppq\u0000~\u0000 \u0000\u0000q\u0000~\u0000Nq\u0000~\u0000Nt\u0000\fminInclusivesr\u0000)co"
+"m.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000"
+"~\u0000\u0019xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010\u0000\u0000\u0000\u0000q\u0000~\u0000Xsr\u0000\u001bcom.sun"
+".msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespace"
+"URIq\u0000~\u0000\u0019xpq\u0000~\u0000fq\u0000~\u0000\u001csq\u0000~\u0000Yt\u0000\u0006Heightq\u0000~\u0000\u001csq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0010p"
+"sq\u0000~\u0000\u0011ppq\u0000~\u0000Tq\u0000~\u0000Xsq\u0000~\u0000pq\u0000~\u0000Uq\u0000~\u0000+sq\u0000~\u0000Yt\u0000\bRotationq\u0000~\u0000\u001cq\u0000~\u0000"
+"^sq\u0000~\u0000\fppsq\u0000~\u0000\u0011ppsq\u0000~\u0000#q\u0000~\u0000\u001ct\u0000\nCoordinateq\u0000~\u0000 q\u0000~\u0000e\u0000\u0000\u0000\u0000q\u0000~\u0000X"
+"sq\u0000~\u0000pq\u0000~\u0000fq\u0000~\u0000\u001csq\u0000~\u0000Yt\u0000\u0006StartXq\u0000~\u0000\u001csq\u0000~\u0000\fppq\u0000~\u0000{sq\u0000~\u0000Yt\u0000\u0006St"
+"artYq\u0000~\u0000\u001csq\u0000~\u0000\fppq\u0000~\u0000asq\u0000~\u0000Yt\u0000\u0005Widthq\u0000~\u0000\u001csr\u0000\"com.sun.msv.gra"
+"mmar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gra"
+"mmar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Exp"
+"ressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006"
+"parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000\u0007q\u0000"
+"~\u0000tq\u0000~\u0000\tq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u000bq\u0000~\u0000\bx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------------");
            }

            protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return gmml.impl.ArcTypeImpl.GraphicsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  18 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "StartY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "Rotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "StartX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _StartY = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Height = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Rotation = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _StartX = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Width = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  18 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "StartY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "Rotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "StartX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  18 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            if (("StartY" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            break;
                        case  3 :
                            if (("Height" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  6 :
                            if (("Rotation" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            if (("StartX" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            break;
                        case  15 :
                            if (("Width" == ___local)&&("" == ___uri)) {
                                state = 16;
                                return ;
                            }
                            break;
                        case  0 :
                            if (("Color" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  8 :
                            if (("Rotation" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  18 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "StartY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  14 :
                            if (("StartY" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("Color" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "Rotation");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  17 :
                            if (("Width" == ___local)&&("" == ___uri)) {
                                state = 18;
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "StartX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  11 :
                            if (("StartX" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "Width");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  5 :
                            if (("Height" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  18 :
                                revertToParentFromText(value);
                                return ;
                            case  12 :
                                attIdx = context.getAttribute("", "StartY");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 15;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "Height");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  10 :
                                state = 11;
                                eatText4(value);
                                return ;
                            case  1 :
                                if (___dt0 .isValid(value, null)) {
                                    state = 2;
                                    eatText6(value);
                                    return ;
                                }
                                if (___dt1 .isValid(value, null)) {
                                    state = 2;
                                    eatText7(value);
                                    return ;
                                }
                                if (___dt2 .isValid(value, null)) {
                                    state = 2;
                                    eatText8(value);
                                    return ;
                                }
                                break;
                            case  4 :
                                state = 5;
                                eatText2(value);
                                return ;
                            case  6 :
                                attIdx = context.getAttribute("", "Rotation");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText3(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  13 :
                                state = 14;
                                eatText1(value);
                                return ;
                            case  7 :
                                state = 8;
                                eatText3(value);
                                return ;
                            case  9 :
                                attIdx = context.getAttribute("", "StartX");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case  15 :
                                attIdx = context.getAttribute("", "Width");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 18;
                                    eatText5(v);
                                    continue outer;
                                }
                                break;
                            case  16 :
                                state = 17;
                                eatText5(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "Color");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Color = com.sun.msv.datatype.xsd.HexBinaryType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText7(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Color = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText8(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Color = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return gmml.impl.ArcTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        attIdx = context.getAttribute("", "Color");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Height");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  4 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  10 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterElement((((gmml.impl.BaseElementImpl)gmml.impl.ArcTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  7 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  8 :
                        attIdx = context.getAttribute("", "Color");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Height");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  10 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((gmml.impl.BaseElementImpl)gmml.impl.ArcTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 4;
                        continue outer;
                    case  3 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("Color" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.ArcTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.ArcTypeImpl.GraphicsTypeImpl.class), 9, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("Height" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.ArcTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.ArcTypeImpl.GraphicsTypeImpl.class), 9, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  10 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((gmml.impl.BaseElementImpl)gmml.impl.ArcTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 4;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        attIdx = context.getAttribute("", "Color");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Height");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  10 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((gmml.impl.BaseElementImpl)gmml.impl.ArcTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 4;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  5 :
                            state = 6;
                            eatText1(value);
                            return ;
                        case  8 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Height");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  4 :
                            state = 7;
                            continue outer;
                        case  10 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            spawnHandlerFromText((((gmml.impl.BaseElementImpl)gmml.impl.ArcTypeImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  1 :
                            state = 4;
                            continue outer;
                        case  2 :
                            state = 3;
                            eatText2(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Notes = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
