//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.19 at 03:49:42 PM CEST 
//


package gmml.impl;

public class LineShapeTypeImpl
    extends gmml.impl.BaseElementImpl
    implements gmml.LineShapeType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected java.lang.String _Comment;
    protected gmml.LineShapeType.GraphicsType _Graphics;
    protected java.lang.String _Notes;
    public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (gmml.LineShapeType.class);
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public java.lang.String getComment() {
        return _Comment;
    }

    public void setComment(java.lang.String value) {
        _Comment = value;
    }

    public gmml.LineShapeType.GraphicsType getGraphics() {
        return _Graphics;
    }

    public void setGraphics(gmml.LineShapeType.GraphicsType value) {
        _Graphics = value;
    }

    public java.lang.String getNotes() {
        return _Notes;
    }

    public void setNotes(java.lang.String value) {
        _Notes = value;
    }

    public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
        return new gmml.impl.LineShapeTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_Notes!= null) {
            context.startElement("", "Notes");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Notes), "Notes");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Comment!= null) {
            context.startElement("", "Comment");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment), "Comment");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "Graphics");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
        context.endElement();
    }

    public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startAttribute("", "Type");
        try {
            context.text(((java.lang.String) _Type), "Type");
        } catch (java.lang.Exception e) {
            gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        super.serializeAttributes(context);
    }

    public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (gmml.LineShapeType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gra"
+"mmar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatyp"
+"e;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000"
+"\u0003ppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\n"
+"finalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bba"
+"seTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.su"
+"n.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit"
+"\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun"
+"/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\bNoteTypesr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAl"
+"waysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0018t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000 \u0001\u0000\u0000\u0000\u0000sr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000&q\u0000~\u0000\u001csq\u0000~\u0000\bppsr\u0000 com.sun."
+"msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000"
+"~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsq\u0000~\u0000\u0011ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000%t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000"
+"1q\u0000~\u0000%sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tl"
+"ocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.Nam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"
+"a-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0005Notesq\u0000~\u0000\u001cq\u0000~\u0000;sq\u0000~\u0000"
+"\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppsr\u0000\'com.sun.msv.datatype.xsd"
+".MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.dataty"
+"pe.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.su"
+"n.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFix"
+"edZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0017L\u0000\fconcreteTypet\u0000\'Lco"
+"m/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0019xq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001ct\u0000\u000bCommentTypeq\u0000~\u0000 \u0000\u0000q\u0000~\u0000$q\u0000~\u0000$t\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000(sq\u0000~"
+"\u0000)q\u0000~\u0000Hq\u0000~\u0000\u001csq\u0000~\u0000\bppsq\u0000~\u0000,q\u0000~\u0000\u000fpq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0007Comm"
+"entq\u0000~\u0000\u001cq\u0000~\u0000;sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsq\u0000~\u0000,q\u0000~\u0000\u000fpsr\u00002com."
+"sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000<q\u0000~\u0000Xsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u00006q\u0000~\u0000;sq\u0000~\u00005t\u0000\u001fgmml.LineShapeType.GraphicsTypet\u0000+http:/"
+"/java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\bppsq\u0000~\u0000,q\u0000~\u0000\u000fpq\u0000~"
+"\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\bGraphicsq\u0000~\u0000\u001csq\u0000~\u0000,ppsq\u0000~\u0000\u0011ppsr\u0000)com.su"
+"n.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLj"
+"ava/util/Set;xq\u0000~\u0000Dq\u0000~\u0000\u001cpq\u0000~\u0000 \u0000\u0000q\u0000~\u0000$q\u0000~\u0000$t\u0000\u000benumerationsr\u0000\u0011"
+"java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u0004Tbart\u0000\rRecept"
+"orRoundt\u0000\fLigandSquaret\u0000\u000bLigandRoundt\u0000\u000eReceptorSquarexq\u0000~\u0000(s"
+"q\u0000~\u0000)t\u0000\u000estring-derivedq\u0000~\u0000\u001csq\u0000~\u00005t\u0000\u0004Typeq\u0000~\u0000\u001csr\u0000\"com.sun.msv"
+".grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv"
+"/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar"
+".ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersio"
+"nL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\r\u0001pq\u0000~"
+"\u0000\tq\u0000~\u0000Aq\u0000~\u0000\u0005q\u0000~\u0000?q\u0000~\u0000\u0010q\u0000~\u0000\u0006q\u0000~\u0000Rq\u0000~\u0000\u0007q\u0000~\u0000Uq\u0000~\u0000+q\u0000~\u0000Kq\u0000~\u0000^q\u0000~"
+"\u0000Px"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class GraphicsTypeImpl implements gmml.LineShapeType.GraphicsType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
    {

        protected java.math.BigInteger _EndX;
        protected java.lang.Object _Color;
        protected java.math.BigInteger _StartY;
        protected java.math.BigInteger _StartX;
        protected java.math.BigInteger _EndY;
        public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
        private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0004L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000&com.sun.msv.datatype.xsd.HexBinaryType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.BinaryBaseType\u00a7\u00ce\u000e\u0097^\u00afW\u0011\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\thexBinaryq\u0000~\u0000\n\u0000\u0000\u0000\u0000");
        private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0006L\u0000\btypeNameq\u0000~\u0000\u0006L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0007t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\r\u0001q\u0000~\u0000\u0011t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\u0010t\u0000\u0006Silvert\u0000\u0005Olivet\u0000\u0004Aquat\u0000\u0006Maroont\u0000\u0004Limet\u0000\u0007Fuchsiat\u0000\u0006Purplet\u0000\u0004Navyt\u0000\u0005Greent\u0000\u0004Tealt\u0000\u0005Blackt\u0000\u0005Whitet\u0000\u0003Redt\u0000\u0004Bluet\u0000\u0004Grayt\u0000\u0006Yellowx");
        private final static org.relaxng.datatype.Datatype ___dt2 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0004L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000\u0002xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integerq\u0000~\u0000\nsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0002L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0004xq\u0000~\u0000\u0003ppq\u0000~\u0000\n\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\rq\u0000~\u0000\u0010t\u0000\u0007decimalq\u0000~\u0000\nq\u0000~\u0000\u0018t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (gmml.LineShapeType.GraphicsType.class);
        }

        public java.math.BigInteger getEndX() {
            return _EndX;
        }

        public void setEndX(java.math.BigInteger value) {
            _EndX = value;
        }

        public java.lang.Object getColor() {
            return _Color;
        }

        public void setColor(java.lang.Object value) {
            _Color = value;
        }

        public java.math.BigInteger getStartY() {
            return _StartY;
        }

        public void setStartY(java.math.BigInteger value) {
            _StartY = value;
        }

        public java.math.BigInteger getStartX() {
            return _StartX;
        }

        public void setStartX(java.math.BigInteger value) {
            _StartX = value;
        }

        public java.math.BigInteger getEndY() {
            return _EndY;
        }

        public void setEndY(java.math.BigInteger value) {
            _EndY = value;
        }

        public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            return new gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_Color!= null) {
                context.startAttribute("", "Color");
                if (_Color instanceof byte[]) {
                    try {
                        context.text(com.sun.msv.datatype.xsd.HexBinaryType.save(((byte[]) _Color)), "Color");
                    } catch (java.lang.Exception e) {
                        gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    if (_Color instanceof java.lang.String) {
                        try {
                            context.text(((java.lang.String) _Color), "Color");
                        } catch (java.lang.Exception e) {
                            gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        if (_Color instanceof java.math.BigInteger) {
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Color)), "Color");
                            } catch (java.lang.Exception e) {
                                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                        } else {
                            gmml.impl.runtime.Util.handleTypeMismatchError(context, this, "Color", _Color);
                        }
                    }
                }
                context.endAttribute();
            }
            if (_EndX!= null) {
                context.startAttribute("", "EndX");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EndX)), "EndX");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_EndY!= null) {
                context.startAttribute("", "EndY");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EndY)), "EndY");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_StartX!= null) {
                context.startAttribute("", "StartX");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartX)), "StartX");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_StartY!= null) {
                context.startAttribute("", "StartY");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartY)), "StartY");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
        }

        public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (gmml.LineShapeType.GraphicsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/ms"
+"v/grammar/NameClass;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd"
+".UnionType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\u000bmemberTypest\u0000*[Lcom/sun/msv/datatype"
+"/xsd/XSDatatypeImpl;xr\u0000%com.sun.msv.datatype.xsd.ConcreteTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000"
+"\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;"
+"xpt\u0000\u0000t\u0000\tColorTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpur\u0000*[Lcom.sun.msv.datatype.xsd.XSD"
+"atatypeImpl;H\u001c\u00ad{pzHw\u0002\u0000\u0000xp\u0000\u0000\u0000\u0003sr\u0000\'com.sun.msv.datatype.xsd.Fi"
+"nalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype"
+".xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd"
+"/XSDatatypeImpl;xq\u0000~\u0000\u0017q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsr\u0000&com.sun.msv.datatype.xs"
+"d.HexBinaryType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.Binar"
+"yBaseType\u00a7\u00ce\u000e\u0097^\u00afW\u0011\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016t\u0000 http://www.w3.org/2001/XMLSchemat\u0000"
+"\thexBinaryq\u0000~\u0000\u001f\u0000\u0000\u0000\u0000sr\u0000)com.sun.msv.datatype.xsd.EnumerationF"
+"acet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.da"
+"tatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFace"
+"tFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000$L\u0000\fconcreteTypet\u0000"
+"\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0018xq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u001bpsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pr"
+"eserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001e\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.String"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000(q\u0000~\u0000*t\u0000\u0006stringq\u0000~\u00003\u0001q\u0000~"
+"\u00005t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000 ?@\u0000\u0000"
+"\u0000\u0000\u0000\u0010t\u0000\u0006Silvert\u0000\u0005Olivet\u0000\u0004Aquat\u0000\u0006Maroont\u0000\u0004Limet\u0000\u0007Fuchsiat\u0000\u0006Pur"
+"plet\u0000\u0004Navyt\u0000\u0005Greent\u0000\u0004Tealt\u0000\u0005Blackt\u0000\u0005Whitet\u0000\u0003Redt\u0000\u0004Bluet\u0000\u0004Gra"
+"yt\u0000\u0006Yellowxsq\u0000~\u0000\"q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsr\u0000$com.sun.msv.datatype.xsd.Int"
+"egerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDeriv"
+"edType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000$xq\u0000~\u0000(q\u0000~\u0000*t\u0000\u0007integerq\u0000~\u0000"
+"\u001fsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalCons"
+"traintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000/ppq\u0000~\u0000\u001f\u0001\u0000sr\u0000#com.sun.msv.datatyp"
+"e.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000(q\u0000~\u0000*t\u0000\u0007decimalq\u0000~\u0000\u001fq\u0000~\u0000St\u0000"
+"\u000efractionDigits\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$Nu"
+"llSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pppsr\u0000#com.sun.msv.grammar.S"
+"impleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~"
+"\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0005Colorq\u0000~\u0000"
+"\u001bsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000]sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0010ppsq\u0000~\u0000\"q\u0000~\u0000"
+"\u001bt\u0000\nCoordinateq\u0000~\u0000\u001fsr\u0000/com.sun.msv.datatype.xsd.NonNegativeI"
+"ntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000*t\u0000\u0012nonNegativeIntegerq\u0000~\u0000\u001fsr"
+"\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#c"
+"om.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000"
+"\u0012Ljava/lang/Object;xq\u0000~\u0000.ppq\u0000~\u0000\u001f\u0000\u0000q\u0000~\u0000Mq\u0000~\u0000Mt\u0000\fminInclusives"
+"r\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005va"
+"lueq\u0000~\u0000\u0018xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010\u0000\u0000\u0000\u0000q\u0000~\u0000Wsr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fname"
+"spaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000fq\u0000~\u0000\u001bsq\u0000~\u0000Xt\u0000\u0004EndXq\u0000~\u0000\u001bq\u0000~\u0000]sq\u0000~\u0000\tppsq\u0000~"
+"\u0000\u000bq\u0000~\u0000\u000fpq\u0000~\u0000asq\u0000~\u0000Xt\u0000\u0004EndYq\u0000~\u0000\u001bq\u0000~\u0000]sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u000fpq\u0000~\u0000"
+"asq\u0000~\u0000Xt\u0000\u0006StartXq\u0000~\u0000\u001bq\u0000~\u0000]sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u000fpq\u0000~\u0000asq\u0000~\u0000Xt\u0000\u0006"
+"StartYq\u0000~\u0000\u001bq\u0000~\u0000]sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Close"
+"dHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0"
+"N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gra"
+"mmar/ExpressionPool;xp\u0000\u0000\u0000\t\u0001pq\u0000~\u0000tq\u0000~\u0000|q\u0000~\u0000\bq\u0000~\u0000\u0006q\u0000~\u0000_q\u0000~\u0000\nq\u0000"
+"~\u0000\u0007q\u0000~\u0000\u0005q\u0000~\u0000xx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
                super(context, "----------------");
            }

            protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            attIdx = context.getAttribute("", "EndY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText1(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "StartX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "EndX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText3(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  15 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "StartY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText4(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _EndY = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _StartX = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _EndX = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _StartY = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            attIdx = context.getAttribute("", "EndY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText1(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "StartX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "EndX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText3(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  15 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "StartY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText4(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            if (("EndY" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            if (("StartX" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            if (("EndX" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  15 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            if (("StartY" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                        case  0 :
                            if (("Color" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            attIdx = context.getAttribute("", "EndY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText1(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  8 :
                            if (("EndY" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "StartX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  14 :
                            if (("StartY" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("Color" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "EndX");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText3(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  15 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "StartY");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText4(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  11 :
                            if (("StartX" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                        case  5 :
                            if (("EndX" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  6 :
                                attIdx = context.getAttribute("", "EndY");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  9 :
                                attIdx = context.getAttribute("", "StartX");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 12;
                                continue outer;
                            case  3 :
                                attIdx = context.getAttribute("", "EndX");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText3(v);
                                    continue outer;
                                }
                                state = 6;
                                continue outer;
                            case  15 :
                                revertToParentFromText(value);
                                return ;
                            case  12 :
                                attIdx = context.getAttribute("", "StartY");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 15;
                                    eatText4(v);
                                    continue outer;
                                }
                                state = 15;
                                continue outer;
                            case  13 :
                                state = 14;
                                eatText4(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "Color");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  7 :
                                state = 8;
                                eatText1(value);
                                return ;
                            case  10 :
                                state = 11;
                                eatText2(value);
                                return ;
                            case  1 :
                                if (___dt0 .isValid(value, null)) {
                                    state = 2;
                                    eatText5(value);
                                    return ;
                                }
                                if (___dt1 .isValid(value, null)) {
                                    state = 2;
                                    eatText6(value);
                                    return ;
                                }
                                if (___dt2 .isValid(value, null)) {
                                    state = 2;
                                    eatText7(value);
                                    return ;
                                }
                                break;
                            case  4 :
                                state = 5;
                                eatText3(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Color = com.sun.msv.datatype.xsd.HexBinaryType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Color = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText7(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Color = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return gmml.impl.LineShapeTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        attIdx = context.getAttribute("", "Color");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "EndX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "EndY");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "StartX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "StartY");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterElement((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  13 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  7 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  3 :
                        spawnHandlerFromEnterElement((((gmml.impl.BaseElementImpl)gmml.impl.LineShapeTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  10 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  11 :
                        attIdx = context.getAttribute("", "Color");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "EndX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "EndY");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "StartX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "StartY");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromLeaveElement((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  6 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  3 :
                        spawnHandlerFromLeaveElement((((gmml.impl.BaseElementImpl)gmml.impl.LineShapeTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  12 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("Color" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("EndX" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("EndY" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("StartX" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("StartY" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  3 :
                        spawnHandlerFromEnterAttribute((((gmml.impl.BaseElementImpl)gmml.impl.LineShapeTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        attIdx = context.getAttribute("", "Color");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "EndX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "EndY");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "StartX");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "StartY");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromLeaveAttribute((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((gmml.impl.BaseElementImpl)gmml.impl.LineShapeTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  11 :
                            attIdx = context.getAttribute("", "Color");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "EndX");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "EndY");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "StartX");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "StartY");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Graphics = ((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl) spawnChildFromText((gmml.impl.LineShapeTypeImpl.GraphicsTypeImpl.class), 12, value));
                            return ;
                        case  13 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  4 :
                            state = 7;
                            continue outer;
                        case  8 :
                            state = 9;
                            eatText2(value);
                            return ;
                        case  7 :
                            state = 10;
                            continue outer;
                        case  5 :
                            state = 6;
                            eatText3(value);
                            return ;
                        case  3 :
                            spawnHandlerFromText((((gmml.impl.BaseElementImpl)gmml.impl.LineShapeTypeImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Notes = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
