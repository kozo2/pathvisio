//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.10.19 at 03:49:42 PM CEST 
//


package gmml.impl;

public class PathwayTypeImpl implements gmml.PathwayType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
{

    protected java.lang.String _DataSource;
    protected java.lang.String _Comment;
    protected java.lang.String _Notes;
    protected java.lang.String _Author;
    protected com.sun.xml.bind.util.ListImpl _Label;
    protected com.sun.xml.bind.util.ListImpl _Arc;
    protected com.sun.xml.bind.util.ListImpl _Shape;
    protected java.lang.String _Availability;
    protected java.lang.String _LastModified;
    protected com.sun.xml.bind.util.ListImpl _LineShape;
    protected java.lang.String _Email;
    protected gmml.PathwayType.GraphicsType _Graphics;
    protected com.sun.xml.bind.util.ListImpl _Line;
    protected java.lang.String _Version;
    protected com.sun.xml.bind.util.ListImpl _CellComponentShape;
    protected com.sun.xml.bind.util.ListImpl _CellShape;
    protected com.sun.xml.bind.util.ListImpl _ProteinComplexShape;
    protected java.lang.String _MaintainedBy;
    protected com.sun.xml.bind.util.ListImpl _Brace;
    protected com.sun.xml.bind.util.ListImpl _GeneProduct;
    protected java.lang.String _Name;
    protected java.lang.String _Organism;
    public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (gmml.PathwayType.class);
    }

    public java.lang.String getDataSource() {
        return _DataSource;
    }

    public void setDataSource(java.lang.String value) {
        _DataSource = value;
    }

    public java.lang.String getComment() {
        return _Comment;
    }

    public void setComment(java.lang.String value) {
        _Comment = value;
    }

    public java.lang.String getNotes() {
        return _Notes;
    }

    public void setNotes(java.lang.String value) {
        _Notes = value;
    }

    public java.lang.String getAuthor() {
        return _Author;
    }

    public void setAuthor(java.lang.String value) {
        _Author = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getLabel() {
        if (_Label == null) {
            _Label = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Label;
    }

    public java.util.List getLabel() {
        return _getLabel();
    }

    protected com.sun.xml.bind.util.ListImpl _getArc() {
        if (_Arc == null) {
            _Arc = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Arc;
    }

    public java.util.List getArc() {
        return _getArc();
    }

    protected com.sun.xml.bind.util.ListImpl _getShape() {
        if (_Shape == null) {
            _Shape = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Shape;
    }

    public java.util.List getShape() {
        return _getShape();
    }

    public java.lang.String getAvailability() {
        return _Availability;
    }

    public void setAvailability(java.lang.String value) {
        _Availability = value;
    }

    public java.lang.String getLastModified() {
        return _LastModified;
    }

    public void setLastModified(java.lang.String value) {
        _LastModified = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getLineShape() {
        if (_LineShape == null) {
            _LineShape = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _LineShape;
    }

    public java.util.List getLineShape() {
        return _getLineShape();
    }

    public java.lang.String getEmail() {
        return _Email;
    }

    public void setEmail(java.lang.String value) {
        _Email = value;
    }

    public gmml.PathwayType.GraphicsType getGraphics() {
        return _Graphics;
    }

    public void setGraphics(gmml.PathwayType.GraphicsType value) {
        _Graphics = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getLine() {
        if (_Line == null) {
            _Line = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Line;
    }

    public java.util.List getLine() {
        return _getLine();
    }

    public java.lang.String getVersion() {
        return _Version;
    }

    public void setVersion(java.lang.String value) {
        _Version = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getCellComponentShape() {
        if (_CellComponentShape == null) {
            _CellComponentShape = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _CellComponentShape;
    }

    public java.util.List getCellComponentShape() {
        return _getCellComponentShape();
    }

    protected com.sun.xml.bind.util.ListImpl _getCellShape() {
        if (_CellShape == null) {
            _CellShape = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _CellShape;
    }

    public java.util.List getCellShape() {
        return _getCellShape();
    }

    protected com.sun.xml.bind.util.ListImpl _getProteinComplexShape() {
        if (_ProteinComplexShape == null) {
            _ProteinComplexShape = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ProteinComplexShape;
    }

    public java.util.List getProteinComplexShape() {
        return _getProteinComplexShape();
    }

    public java.lang.String getMaintainedBy() {
        return _MaintainedBy;
    }

    public void setMaintainedBy(java.lang.String value) {
        _MaintainedBy = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getBrace() {
        if (_Brace == null) {
            _Brace = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Brace;
    }

    public java.util.List getBrace() {
        return _getBrace();
    }

    protected com.sun.xml.bind.util.ListImpl _getGeneProduct() {
        if (_GeneProduct == null) {
            _GeneProduct = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _GeneProduct;
    }

    public java.util.List getGeneProduct() {
        return _getGeneProduct();
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getOrganism() {
        return _Organism;
    }

    public void setOrganism(java.lang.String value) {
        _Organism = value;
    }

    public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
        return new gmml.impl.PathwayTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_Label == null)? 0 :_Label.size());
        int idx6 = 0;
        final int len6 = ((_Arc == null)? 0 :_Arc.size());
        int idx7 = 0;
        final int len7 = ((_Shape == null)? 0 :_Shape.size());
        int idx10 = 0;
        final int len10 = ((_LineShape == null)? 0 :_LineShape.size());
        int idx13 = 0;
        final int len13 = ((_Line == null)? 0 :_Line.size());
        int idx15 = 0;
        final int len15 = ((_CellComponentShape == null)? 0 :_CellComponentShape.size());
        int idx16 = 0;
        final int len16 = ((_CellShape == null)? 0 :_CellShape.size());
        int idx17 = 0;
        final int len17 = ((_ProteinComplexShape == null)? 0 :_ProteinComplexShape.size());
        int idx19 = 0;
        final int len19 = ((_Brace == null)? 0 :_Brace.size());
        int idx20 = 0;
        final int len20 = ((_GeneProduct == null)? 0 :_GeneProduct.size());
        if (_Notes!= null) {
            context.startElement("", "Notes");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Notes), "Notes");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Comment!= null) {
            context.startElement("", "Comment");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comment), "Comment");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Graphics!= null) {
            context.startElement("", "Graphics");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Graphics), "Graphics");
            context.endElement();
        }
        while (idx20 != len20) {
            if (_GeneProduct.get(idx20) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _GeneProduct.get(idx20 ++)), "GeneProduct");
            } else {
                context.startElement("", "GeneProduct");
                int idx_6 = idx20;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GeneProduct.get(idx_6 ++)), "GeneProduct");
                context.endNamespaceDecls();
                int idx_7 = idx20;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GeneProduct.get(idx_7 ++)), "GeneProduct");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _GeneProduct.get(idx20 ++)), "GeneProduct");
                context.endElement();
            }
        }
        while (idx13 != len13) {
            if (_Line.get(idx13) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Line.get(idx13 ++)), "Line");
            } else {
                context.startElement("", "Line");
                int idx_8 = idx13;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Line.get(idx_8 ++)), "Line");
                context.endNamespaceDecls();
                int idx_9 = idx13;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Line.get(idx_9 ++)), "Line");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Line.get(idx13 ++)), "Line");
                context.endElement();
            }
        }
        while (idx10 != len10) {
            if (_LineShape.get(idx10) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LineShape.get(idx10 ++)), "LineShape");
            } else {
                context.startElement("", "LineShape");
                int idx_10 = idx10;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LineShape.get(idx_10 ++)), "LineShape");
                context.endNamespaceDecls();
                int idx_11 = idx10;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LineShape.get(idx_11 ++)), "LineShape");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LineShape.get(idx10 ++)), "LineShape");
                context.endElement();
            }
        }
        while (idx6 != len6) {
            if (_Arc.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Arc.get(idx6 ++)), "Arc");
            } else {
                context.startElement("", "Arc");
                int idx_12 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Arc.get(idx_12 ++)), "Arc");
                context.endNamespaceDecls();
                int idx_13 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Arc.get(idx_13 ++)), "Arc");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Arc.get(idx6 ++)), "Arc");
                context.endElement();
            }
        }
        while (idx5 != len5) {
            if (_Label.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Label.get(idx5 ++)), "Label");
            } else {
                context.startElement("", "Label");
                int idx_14 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Label.get(idx_14 ++)), "Label");
                context.endNamespaceDecls();
                int idx_15 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Label.get(idx_15 ++)), "Label");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Label.get(idx5 ++)), "Label");
                context.endElement();
            }
        }
        while (idx7 != len7) {
            if (_Shape.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Shape.get(idx7 ++)), "Shape");
            } else {
                context.startElement("", "Shape");
                int idx_16 = idx7;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Shape.get(idx_16 ++)), "Shape");
                context.endNamespaceDecls();
                int idx_17 = idx7;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Shape.get(idx_17 ++)), "Shape");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Shape.get(idx7 ++)), "Shape");
                context.endElement();
            }
        }
        while (idx19 != len19) {
            if (_Brace.get(idx19) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Brace.get(idx19 ++)), "Brace");
            } else {
                context.startElement("", "Brace");
                int idx_18 = idx19;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Brace.get(idx_18 ++)), "Brace");
                context.endNamespaceDecls();
                int idx_19 = idx19;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Brace.get(idx_19 ++)), "Brace");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Brace.get(idx19 ++)), "Brace");
                context.endElement();
            }
        }
        while (idx16 != len16) {
            if (_CellShape.get(idx16) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CellShape.get(idx16 ++)), "CellShape");
            } else {
                context.startElement("", "CellShape");
                int idx_20 = idx16;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CellShape.get(idx_20 ++)), "CellShape");
                context.endNamespaceDecls();
                int idx_21 = idx16;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CellShape.get(idx_21 ++)), "CellShape");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CellShape.get(idx16 ++)), "CellShape");
                context.endElement();
            }
        }
        while (idx15 != len15) {
            if (_CellComponentShape.get(idx15) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CellComponentShape.get(idx15 ++)), "CellComponentShape");
            } else {
                context.startElement("", "CellComponentShape");
                int idx_22 = idx15;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CellComponentShape.get(idx_22 ++)), "CellComponentShape");
                context.endNamespaceDecls();
                int idx_23 = idx15;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CellComponentShape.get(idx_23 ++)), "CellComponentShape");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CellComponentShape.get(idx15 ++)), "CellComponentShape");
                context.endElement();
            }
        }
        while (idx17 != len17) {
            if (_ProteinComplexShape.get(idx17) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProteinComplexShape.get(idx17 ++)), "ProteinComplexShape");
            } else {
                context.startElement("", "ProteinComplexShape");
                int idx_24 = idx17;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProteinComplexShape.get(idx_24 ++)), "ProteinComplexShape");
                context.endNamespaceDecls();
                int idx_25 = idx17;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProteinComplexShape.get(idx_25 ++)), "ProteinComplexShape");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProteinComplexShape.get(idx17 ++)), "ProteinComplexShape");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_Label == null)? 0 :_Label.size());
        int idx6 = 0;
        final int len6 = ((_Arc == null)? 0 :_Arc.size());
        int idx7 = 0;
        final int len7 = ((_Shape == null)? 0 :_Shape.size());
        int idx10 = 0;
        final int len10 = ((_LineShape == null)? 0 :_LineShape.size());
        int idx13 = 0;
        final int len13 = ((_Line == null)? 0 :_Line.size());
        int idx15 = 0;
        final int len15 = ((_CellComponentShape == null)? 0 :_CellComponentShape.size());
        int idx16 = 0;
        final int len16 = ((_CellShape == null)? 0 :_CellShape.size());
        int idx17 = 0;
        final int len17 = ((_ProteinComplexShape == null)? 0 :_ProteinComplexShape.size());
        int idx19 = 0;
        final int len19 = ((_Brace == null)? 0 :_Brace.size());
        int idx20 = 0;
        final int len20 = ((_GeneProduct == null)? 0 :_GeneProduct.size());
        if (_Author!= null) {
            context.startAttribute("", "Author");
            try {
                context.text(((java.lang.String) _Author), "Author");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Availability!= null) {
            context.startAttribute("", "Availability");
            try {
                context.text(((java.lang.String) _Availability), "Availability");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_DataSource!= null) {
            context.startAttribute("", "Data-Source");
            try {
                context.text(((java.lang.String) _DataSource), "DataSource");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Email!= null) {
            context.startAttribute("", "Email");
            try {
                context.text(((java.lang.String) _Email), "Email");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_LastModified!= null) {
            context.startAttribute("", "Last-Modified");
            try {
                context.text(((java.lang.String) _LastModified), "LastModified");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MaintainedBy!= null) {
            context.startAttribute("", "Maintained-By");
            try {
                context.text(((java.lang.String) _MaintainedBy), "MaintainedBy");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "Name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Organism!= null) {
            context.startAttribute("", "Organism");
            try {
                context.text(((java.lang.String) _Organism), "Organism");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Version!= null) {
            context.startAttribute("", "Version");
            try {
                context.text(((java.lang.String) _Version), "Version");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx20 != len20) {
            if (_GeneProduct.get(idx20) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GeneProduct.get(idx20 ++)), "GeneProduct");
            } else {
                idx20 += 1;
            }
        }
        while (idx13 != len13) {
            if (_Line.get(idx13) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Line.get(idx13 ++)), "Line");
            } else {
                idx13 += 1;
            }
        }
        while (idx10 != len10) {
            if (_LineShape.get(idx10) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LineShape.get(idx10 ++)), "LineShape");
            } else {
                idx10 += 1;
            }
        }
        while (idx6 != len6) {
            if (_Arc.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Arc.get(idx6 ++)), "Arc");
            } else {
                idx6 += 1;
            }
        }
        while (idx5 != len5) {
            if (_Label.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Label.get(idx5 ++)), "Label");
            } else {
                idx5 += 1;
            }
        }
        while (idx7 != len7) {
            if (_Shape.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Shape.get(idx7 ++)), "Shape");
            } else {
                idx7 += 1;
            }
        }
        while (idx19 != len19) {
            if (_Brace.get(idx19) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Brace.get(idx19 ++)), "Brace");
            } else {
                idx19 += 1;
            }
        }
        while (idx16 != len16) {
            if (_CellShape.get(idx16) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CellShape.get(idx16 ++)), "CellShape");
            } else {
                idx16 += 1;
            }
        }
        while (idx15 != len15) {
            if (_CellComponentShape.get(idx15) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CellComponentShape.get(idx15 ++)), "CellComponentShape");
            } else {
                idx15 += 1;
            }
        }
        while (idx17 != len17) {
            if (_ProteinComplexShape.get(idx17) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProteinComplexShape.get(idx17 ++)), "ProteinComplexShape");
            } else {
                idx17 += 1;
            }
        }
    }

    public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_Label == null)? 0 :_Label.size());
        int idx6 = 0;
        final int len6 = ((_Arc == null)? 0 :_Arc.size());
        int idx7 = 0;
        final int len7 = ((_Shape == null)? 0 :_Shape.size());
        int idx10 = 0;
        final int len10 = ((_LineShape == null)? 0 :_LineShape.size());
        int idx13 = 0;
        final int len13 = ((_Line == null)? 0 :_Line.size());
        int idx15 = 0;
        final int len15 = ((_CellComponentShape == null)? 0 :_CellComponentShape.size());
        int idx16 = 0;
        final int len16 = ((_CellShape == null)? 0 :_CellShape.size());
        int idx17 = 0;
        final int len17 = ((_ProteinComplexShape == null)? 0 :_ProteinComplexShape.size());
        int idx19 = 0;
        final int len19 = ((_Brace == null)? 0 :_Brace.size());
        int idx20 = 0;
        final int len20 = ((_GeneProduct == null)? 0 :_GeneProduct.size());
        while (idx20 != len20) {
            if (_GeneProduct.get(idx20) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GeneProduct.get(idx20 ++)), "GeneProduct");
            } else {
                idx20 += 1;
            }
        }
        while (idx13 != len13) {
            if (_Line.get(idx13) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Line.get(idx13 ++)), "Line");
            } else {
                idx13 += 1;
            }
        }
        while (idx10 != len10) {
            if (_LineShape.get(idx10) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LineShape.get(idx10 ++)), "LineShape");
            } else {
                idx10 += 1;
            }
        }
        while (idx6 != len6) {
            if (_Arc.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Arc.get(idx6 ++)), "Arc");
            } else {
                idx6 += 1;
            }
        }
        while (idx5 != len5) {
            if (_Label.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Label.get(idx5 ++)), "Label");
            } else {
                idx5 += 1;
            }
        }
        while (idx7 != len7) {
            if (_Shape.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Shape.get(idx7 ++)), "Shape");
            } else {
                idx7 += 1;
            }
        }
        while (idx19 != len19) {
            if (_Brace.get(idx19) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Brace.get(idx19 ++)), "Brace");
            } else {
                idx19 += 1;
            }
        }
        while (idx16 != len16) {
            if (_CellShape.get(idx16) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CellShape.get(idx16 ++)), "CellShape");
            } else {
                idx16 += 1;
            }
        }
        while (idx15 != len15) {
            if (_CellComponentShape.get(idx15) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CellComponentShape.get(idx15 ++)), "CellComponentShape");
            } else {
                idx15 += 1;
            }
        }
        while (idx17 != len17) {
            if (_ProteinComplexShape.get(idx17) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProteinComplexShape.get(idx17 ++)), "ProteinComplexShape");
            } else {
                idx17 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (gmml.PathwayType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com."
+"sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000"
+"\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elem"
+"entExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMode"
+"lq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000"
+"~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.datatype.xsd.Fina"
+"lComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.x"
+"sd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/X"
+"SDatatypeImpl;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000+"
+"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso"
+"r;xpt\u0000\u0000t\u0000\bNoteTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"
+"SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000#com.sun.msv.datatype.xsd.Stri"
+"ngType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xs"
+"d.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.C"
+"oncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000*t\u0000 http://www.w3.org/2001/XMLSch"
+"emat\u0000\u0006stringq\u0000~\u00002\u0001\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$Nul"
+"lSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.String"
+"Pair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000+L\u0000\fnamespaceURIq\u0000~\u0000+xpq\u0000~\u00008q"
+"\u0000~\u0000.sq\u0000~\u0000\u001appsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L"
+"\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001dxq\u0000~\u0000\u0003q\u0000~\u0000!psq\u0000~\u0000#ppsr\u0000\"com.sun.m"
+"sv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00007t\u0000\u0005QNamesr\u00005c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000Cq\u0000~\u00007sr\u0000#com.sun.msv.grammar.Simple"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000+L\u0000\fnamespaceURIq\u0000~\u0000+xr\u0000"
+"\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Ex"
+"pression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000 \u0001q\u0000~\u0000Msq\u0000~\u0000"
+"Gt\u0000\u0005Notesq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000#ppsr\u0000\'"
+"com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLeng"
+"thxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFa"
+"cet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000"
+"~\u0000)L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;"
+"L\u0000\tfacetNameq\u0000~\u0000+xq\u0000~\u0000*q\u0000~\u0000.t\u0000\u000bCommentTypeq\u0000~\u00002\u0000\u0000q\u0000~\u00006q\u0000~\u00006t"
+"\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000Zq\u0000~\u0000.sq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000"
+"@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0007Commentq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!psr\u00002com.sun.msv.grammar.Expressi"
+"on$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Nq\u0000~\u0000ksr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Hq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u001dgmml"
+".PathwayType.GraphicsTypet\u0000+http://java.sun.com/jaxb/xjc/dum"
+"my-elementssq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\bGraph"
+"icsq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq"
+"\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0010gmml.G"
+"eneProductq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq"
+"\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0014gmml.GeneProductTyp"
+"eq\u0000~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u000bGeneProduc"
+"tq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~"
+"\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\tgmml.Lin"
+"eq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~"
+"\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\rgmml.LineTypeq\u0000~\u0000psq\u0000~\u0000\u001appsq"
+"\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0004Lineq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~"
+"\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q"
+"\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u000egmml.LineShapeq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000m"
+"q\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0012gmml.LineShapeTypeq\u0000~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~"
+"\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\tLineShapeq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!p"
+"sq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~"
+"\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\bgmml.Arcq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\f"
+"gmml.ArcTypeq\u0000~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000"
+"\u0003Arcq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000s"
+"q\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\ngmml."
+"Labelq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!p"
+"sq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u000egmml.LabelTypeq\u0000~\u0000psq\u0000~\u0000"
+"\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0005Labelq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001a"
+"ppsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!ps"
+"q\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\ngmml.Shapeq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000"
+"!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~"
+"\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u000egmml.ShapeTypeq\u0000~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@"
+"q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0005Shapeq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001a"
+"q\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000"
+"mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\ngmml.Braceq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000"
+"sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u000egmml"
+".BraceTypeq\u0000~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0005B"
+"raceq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000s"
+"q\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u000egmml."
+"CellShapeq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000"
+"~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0012gmml.CellShapeTypeq\u0000"
+"~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\tCellShapeq\u0000~\u0000"
+".q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u001apps"
+"q\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0017gmml.CellComp"
+"onentShapeq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq"
+"\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u001bgmml.CellComponentS"
+"hapeTypeq\u0000~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0012Cel"
+"lComponentShapeq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000\u001aq\u0000~\u0000!psq\u0000"
+"~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000"
+"~\u0000Gt\u0000\u0018gmml.ProteinComplexShapeq\u0000~\u0000psq\u0000~\u0000\u001cq\u0000~\u0000!p\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u001cpp\u0000sq\u0000~\u0000\u001appsq\u0000~\u0000fq\u0000~\u0000!psq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000kq\u0000~\u0000mq\u0000~\u0000Msq\u0000~\u0000Gt\u0000"
+"\u001cgmml.ProteinComplexShapeTypeq\u0000~\u0000psq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0000@q"
+"\u0000~\u0000Iq\u0000~\u0000Msq\u0000~\u0000Gt\u0000\u0013ProteinComplexShapeq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000"
+">q\u0000~\u0000!psq\u0000~\u0000#ppq\u0000~\u00006q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u00008q\u0000~\u00007sq\u0000~\u0000Gt\u0000\u0006Authorq\u0000~\u0000"
+".q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0001Isq\u0000~\u0000Gt\u0000\fAvailabilityq\u0000~\u0000.q\u0000~"
+"\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0001Isq\u0000~\u0000Gt\u0000\u000bData-Sourceq\u0000~\u0000.q\u0000~\u0000Msq\u0000"
+"~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0001Isq\u0000~\u0000Gt\u0000\u0005Emailq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000>"
+"q\u0000~\u0000!pq\u0000~\u0001Isq\u0000~\u0000Gt\u0000\rLast-Modifiedq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~"
+"\u0000!pq\u0000~\u0001Isq\u0000~\u0000Gt\u0000\rMaintained-Byq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000>ppsq\u0000~\u0000#ppsq\u0000~"
+"\u0000Uq\u0000~\u0000.t\u0000\bNameTypeq\u0000~\u00002\u0001\u0000q\u0000~\u00006q\u0000~\u00006q\u0000~\u0000[\u0000\u0000\u0000\u0014q\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0001d"
+"q\u0000~\u0000.sq\u0000~\u0000Gt\u0000\u0004Nameq\u0000~\u0000.sq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0001Isq\u0000~\u0000Gt\u0000\bOrg"
+"anismq\u0000~\u0000.q\u0000~\u0000Msq\u0000~\u0000\u001appsq\u0000~\u0000>q\u0000~\u0000!pq\u0000~\u0001Isq\u0000~\u0000Gt\u0000\u0007Versionq\u0000~\u0000"
+".q\u0000~\u0000Msr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bex"
+"pTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr"
+"\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000"
+"\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expre"
+"ssionPool;xp\u0000\u0000\u0000\u0082\u0001pq\u0000~\u0000\u0013q\u0000~\u0001Qq\u0000~\u0000\"q\u0000~\u0000\bq\u0000~\u0000\u0017q\u0000~\u0001]q\u0000~\u0000\nq\u0000~\u00014q\u0000"
+"~\u0001\u001fq\u0000~\u0001\nq\u0000~\u0000\u00f5q\u0000~\u0000\u00e0q\u0000~\u0000\u00cbq\u0000~\u0000wq\u0000~\u0000\u008cq\u0000~\u0000\u00a1q\u0000~\u0000\u00b6q\u0000~\u0000\u000eq\u0000~\u0001Uq\u0000~\u0000\u0007q\u0000"
+"~\u0000\u000bq\u0000~\u0000\u0010q\u0000~\u0001Cq\u0000~\u0001.q\u0000~\u0001\u0019q\u0000~\u0001\u0004q\u0000~\u0000\u00efq\u0000~\u0000\u00daq\u0000~\u0000=q\u0000~\u0000]q\u0000~\u0000qq\u0000~\u0000\u0086q\u0000"
+"~\u0000\u009bq\u0000~\u0000\u00b0q\u0000~\u0000\u00c5q\u0000~\u0001Yq\u0000~\u0000\u0011q\u0000~\u0001hq\u0000~\u00012q\u0000~\u0001\u001dq\u0000~\u0001\bq\u0000~\u0000\u00f3q\u0000~\u0000\u00deq\u0000~\u0000\u00c9q\u0000"
+"~\u0000uq\u0000~\u0000\u008aq\u0000~\u0000\u009fq\u0000~\u0000\u00b4q\u0000~\u0000aq\u0000~\u0000\u0012q\u0000~\u0000\u0005q\u0000~\u0000\u0014q\u0000~\u0000\rq\u0000~\u00013q\u0000~\u0001\u001eq\u0000~\u0001\tq\u0000"
+"~\u0000\u00f4q\u0000~\u0000\u00dfq\u0000~\u0000\u00caq\u0000~\u0000vq\u0000~\u0000\u008bq\u0000~\u0000\u00a0q\u0000~\u0000\u00b5q\u0000~\u0000Sq\u0000~\u0001Gq\u0000~\u0000\u0006q\u0000~\u0000Qq\u0000~\u0000\u0015q\u0000"
+"~\u0001*q\u0000~\u0001\"q\u0000~\u0001\u0015q\u0000~\u0001\rq\u0000~\u0001\u0000q\u0000~\u0000\u00f8q\u0000~\u0000\u00ebq\u0000~\u0000\u00e3q\u0000~\u0000hq\u0000~\u0000zq\u0000~\u0000\u0082q\u0000~\u0000\u008fq\u0000"
+"~\u0000\u0097q\u0000~\u0000\u00a4q\u0000~\u0000\u00acq\u0000~\u0000\u00b9q\u0000~\u0000\u00c1q\u0000~\u0000\u00ceq\u0000~\u0000\u00d6q\u0000~\u0000\u001bq\u0000~\u0001?q\u0000~\u00017q\u0000~\u0001lq\u0000~\u0001>q\u0000"
+"~\u00016q\u0000~\u0001)q\u0000~\u0001!q\u0000~\u0001\u0014q\u0000~\u0001\fq\u0000~\u0000\u00ffq\u0000~\u0000\u00f7q\u0000~\u0000\u00eaq\u0000~\u0000\u00e2q\u0000~\u0000eq\u0000~\u0000yq\u0000~\u0000\u0081q\u0000"
+"~\u0000\u008eq\u0000~\u0000\u0096q\u0000~\u0000\u00a3q\u0000~\u0000\u00abq\u0000~\u0000\u00b8q\u0000~\u0000\u00c0q\u0000~\u0000\u00cdq\u0000~\u0000\u00d5q\u0000~\u0001<q\u0000~\u0001\'q\u0000~\u0001\u0012q\u0000~\u0000\u00fdq\u0000"
+"~\u0000\u00e8q\u0000~\u0000\u00d3q\u0000~\u0000\u00a9q\u0000~\u0000\u00beq\u0000~\u0000cq\u0000~\u0000\u007fq\u0000~\u0000\u0094q\u0000~\u0001Mq\u0000~\u0000\u0016q\u0000~\u0000\u0019q\u0000~\u0000\tq\u0000~\u0000\u000fq\u0000"
+"~\u0000\u0018q\u0000~\u0000\fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class GraphicsTypeImpl implements gmml.PathwayType.GraphicsType, com.sun.xml.bind.JAXBObject, gmml.impl.runtime.UnmarshallableObject, gmml.impl.runtime.XMLSerializable, gmml.impl.runtime.ValidatableObject
    {

        protected java.math.BigInteger _MapInfoLeft;
        protected java.math.BigInteger _BoardHeight;
        protected java.math.BigInteger _WindowWidth;
        protected java.math.BigInteger _BoardWidth;
        protected java.math.BigInteger _WindowHeight;
        protected java.math.BigInteger _MapInfoTop;
        public final static java.lang.Class version = (gmml.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (gmml.PathwayType.GraphicsType.class);
        }

        public java.math.BigInteger getMapInfoLeft() {
            if (_MapInfoLeft == null) {
                return javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.DatatypeConverterImpl.installHook("0"));
            } else {
                return _MapInfoLeft;
            }
        }

        public void setMapInfoLeft(java.math.BigInteger value) {
            _MapInfoLeft = value;
        }

        public java.math.BigInteger getBoardHeight() {
            return _BoardHeight;
        }

        public void setBoardHeight(java.math.BigInteger value) {
            _BoardHeight = value;
        }

        public java.math.BigInteger getWindowWidth() {
            return _WindowWidth;
        }

        public void setWindowWidth(java.math.BigInteger value) {
            _WindowWidth = value;
        }

        public java.math.BigInteger getBoardWidth() {
            return _BoardWidth;
        }

        public void setBoardWidth(java.math.BigInteger value) {
            _BoardWidth = value;
        }

        public java.math.BigInteger getWindowHeight() {
            return _WindowHeight;
        }

        public void setWindowHeight(java.math.BigInteger value) {
            _WindowHeight = value;
        }

        public java.math.BigInteger getMapInfoTop() {
            if (_MapInfoTop == null) {
                return javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.DatatypeConverterImpl.installHook("0"));
            } else {
                return _MapInfoTop;
            }
        }

        public void setMapInfoTop(java.math.BigInteger value) {
            _MapInfoTop = value;
        }

        public gmml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            return new gmml.impl.PathwayTypeImpl.GraphicsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "BoardHeight");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BoardHeight)), "BoardHeight");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "BoardWidth");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BoardWidth)), "BoardWidth");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (_MapInfoLeft!= null) {
                context.startAttribute("", "MapInfoLeft");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MapInfoLeft)), "MapInfoLeft");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_MapInfoTop!= null) {
                context.startAttribute("", "MapInfoTop");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MapInfoTop)), "MapInfoTop");
                } catch (java.lang.Exception e) {
                    gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "WindowHeight");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WindowHeight)), "WindowHeight");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "WindowWidth");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WindowWidth)), "WindowWidth");
            } catch (java.lang.Exception e) {
                gmml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(gmml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (gmml.PathwayType.GraphicsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com."
+"sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameCla"
+"sst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv."
+"grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"
+"type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"
+"\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com"
+".sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceU"
+"rit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\nCoordinates"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000/com.sun.msv.datatype.xsd.NonNegativeIntegerType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L"
+"\u0000\nbaseFacetsq\u0000~\u0000\u0013xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0012nonNegativ"
+"eIntegerq\u0000~\u0000\u001csr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.x"
+"sd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.ms"
+"v.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000"
+"\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0013L\u0000\fconcreteTypet\u0000\'Lcom/su"
+"n/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0015xq\u0000~\u0000\u0014ppq\u0000~"
+"\u0000\u001c\u0000\u0000sq\u0000~\u0000\u001eq\u0000~\u0000#t\u0000\u0007integerq\u0000~\u0000\u001csr\u0000,com.sun.msv.datatype.xsd.F"
+"ractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatyp"
+"e.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000)ppq"
+"\u0000~\u0000\u001c\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000 q\u0000~\u0000#t\u0000\u0007decimalq\u0000~\u0000\u001cq\u0000~\u00002t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000,t\u0000\fminI"
+"nclusivesr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0015xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010\u0000\u0000\u0000\u0000sr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xpq\u0000~\u0000$q\u0000~\u0000\u0018sr\u0000#com.sun.msv.gram"
+"mar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceU"
+"RIq\u0000~\u0000\u0015xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u000bBoar"
+"dHeightq\u0000~\u0000\u0018sq\u0000~\u0000\nppq\u0000~\u0000\u0010sq\u0000~\u0000>t\u0000\nBoardWidthq\u0000~\u0000\u0018sr\u0000\u001dcom.sun"
+".msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\nsr\u0000\u0011java.lang"
+".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000pq\u0000~\u0000\u0010sq\u0000~\u0000>t\u0000\u000bMapInfoLeftq\u0000~\u0000"
+"\u0018sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000H\u0001q\u0000~\u0000Msq\u0000~\u0000Eppsq\u0000~\u0000\nq\u0000~\u0000Ipq\u0000~\u0000\u0010sq\u0000~\u0000>t\u0000\nMapI"
+"nfoTopq\u0000~\u0000\u0018q\u0000~\u0000Msq\u0000~\u0000\nppq\u0000~\u0000\u0010sq\u0000~\u0000>t\u0000\fWindowHeightq\u0000~\u0000\u0018sq\u0000~\u0000"
+"\nppq\u0000~\u0000\u0010sq\u0000~\u0000>t\u0000\u000bWindowWidthq\u0000~\u0000\u0018sr\u0000\"com.sun.msv.grammar.Exp"
+"ressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Exp"
+"ressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionP"
+"ool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000"
+"$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000Oq\u0000~\u0000\tq\u0000~\u0000\u0007"
+"q\u0000~\u0000Fq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\bx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------------");
            }

            protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return gmml.impl.PathwayTypeImpl.GraphicsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            attIdx = context.getAttribute("", "WindowWidth");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "BoardHeight");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "MapInfoTop");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  18 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "BoardWidth");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "WindowHeight");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "MapInfoLeft");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText6(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _WindowWidth = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _BoardHeight = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _MapInfoTop = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _BoardWidth = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _WindowHeight = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _MapInfoLeft = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            attIdx = context.getAttribute("", "WindowWidth");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "BoardHeight");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "MapInfoTop");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  18 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "BoardWidth");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "WindowHeight");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "MapInfoLeft");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText6(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  15 :
                            if (("WindowWidth" == ___local)&&("" == ___uri)) {
                                state = 16;
                                return ;
                            }
                            break;
                        case  0 :
                            if (("BoardHeight" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  9 :
                            if (("MapInfoTop" == ___local)&&("" == ___uri)) {
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  18 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            if (("BoardWidth" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  12 :
                            if (("WindowHeight" == ___local)&&("" == ___uri)) {
                                state = 13;
                                return ;
                            }
                            break;
                        case  6 :
                            if (("MapInfoLeft" == ___local)&&("" == ___uri)) {
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  17 :
                            if (("WindowWidth" == ___local)&&("" == ___uri)) {
                                state = 18;
                                return ;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "WindowWidth");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  14 :
                            if (("WindowHeight" == ___local)&&("" == ___uri)) {
                                state = 15;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("BoardHeight" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "BoardHeight");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "MapInfoTop");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  18 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "BoardWidth");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  8 :
                            if (("MapInfoLeft" == ___local)&&("" == ___uri)) {
                                state = 9;
                                return ;
                            }
                            break;
                        case  5 :
                            if (("BoardWidth" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "WindowHeight");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "MapInfoLeft");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText6(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  11 :
                            if (("MapInfoTop" == ___local)&&("" == ___uri)) {
                                state = 12;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  10 :
                                state = 11;
                                eatText3(value);
                                return ;
                            case  15 :
                                attIdx = context.getAttribute("", "WindowWidth");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 18;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  13 :
                                state = 14;
                                eatText5(value);
                                return ;
                            case  4 :
                                state = 5;
                                eatText4(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "BoardHeight");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  9 :
                                attIdx = context.getAttribute("", "MapInfoTop");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText3(v);
                                    continue outer;
                                }
                                state = 12;
                                continue outer;
                            case  18 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText2(value);
                                return ;
                            case  7 :
                                state = 8;
                                eatText6(value);
                                return ;
                            case  16 :
                                state = 17;
                                eatText1(value);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "BoardWidth");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case  12 :
                                attIdx = context.getAttribute("", "WindowHeight");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 15;
                                    eatText5(v);
                                    continue outer;
                                }
                                break;
                            case  6 :
                                attIdx = context.getAttribute("", "MapInfoLeft");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText6(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends gmml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(gmml.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------------------------");
        }

        protected Unmarshaller(gmml.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return gmml.impl.PathwayTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  57 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "Availability");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "Organism");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 24;
                            eatText2(v);
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  37 :
                        attIdx = context.getAttribute("", "BackpageHead");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "GeneID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  53 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            _getBrace().add(((gmml.impl.BraceTypeImpl) spawnChildFromEnterElement((gmml.impl.BraceTypeImpl.class), 54, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            _getBrace().add(((gmml.impl.BraceTypeImpl) spawnChildFromEnterElement((gmml.impl.BraceTypeImpl.class), 54, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getBrace().add(((gmml.impl.BraceTypeImpl) spawnChildFromEnterElement((gmml.impl.BraceTypeImpl.class), 54, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  40 :
                        attIdx = context.getAttribute("", "Style");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  46 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromEnterElement((gmml.impl.ArcTypeImpl.class), 47, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromEnterElement((gmml.impl.ArcTypeImpl.class), 47, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromEnterElement((gmml.impl.ArcTypeImpl.class), 47, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromEnterElement((gmml.impl.ArcTypeImpl.class), 47, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  34 :
                        attIdx = context.getAttribute("", "BoardHeight");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  27 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  62 :
                        if (("ProteinComplexShape" == ___local)&&("" == ___uri)) {
                            _getProteinComplexShape().add(((gmml.impl.ProteinComplexShapeImpl) spawnChildFromEnterElement((gmml.impl.ProteinComplexShapeImpl.class), 62, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProteinComplexShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 60;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  63 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            _getCellShape().add(((gmml.impl.CellShapeTypeImpl) spawnChildFromEnterElement((gmml.impl.CellShapeTypeImpl.class), 64, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            _getCellShape().add(((gmml.impl.CellShapeTypeImpl) spawnChildFromEnterElement((gmml.impl.CellShapeTypeImpl.class), 64, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  55 :
                        if (("Brace" == ___local)&&("" == ___uri)) {
                            _getBrace().add(((gmml.impl.BraceImpl) spawnChildFromEnterElement((gmml.impl.BraceImpl.class), 55, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Brace" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 53;
                            return ;
                        }
                        if (("CellShape" == ___local)&&("" == ___uri)) {
                            _getCellShape().add(((gmml.impl.CellShapeImpl) spawnChildFromEnterElement((gmml.impl.CellShapeImpl.class), 56, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CellShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 63;
                            return ;
                        }
                        state = 56;
                        continue outer;
                    case  42 :
                        if (("Line" == ___local)&&("" == ___uri)) {
                            _getLine().add(((gmml.impl.LineImpl) spawnChildFromEnterElement((gmml.impl.LineImpl.class), 42, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Line" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 40;
                            return ;
                        }
                        if (("LineShape" == ___local)&&("" == ___uri)) {
                            _getLineShape().add(((gmml.impl.LineShapeImpl) spawnChildFromEnterElement((gmml.impl.LineShapeImpl.class), 45, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LineShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  60 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            _getProteinComplexShape().add(((gmml.impl.ProteinComplexShapeTypeImpl) spawnChildFromEnterElement((gmml.impl.ProteinComplexShapeTypeImpl.class), 61, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            _getProteinComplexShape().add(((gmml.impl.ProteinComplexShapeTypeImpl) spawnChildFromEnterElement((gmml.impl.ProteinComplexShapeTypeImpl.class), 61, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  56 :
                        if (("CellShape" == ___local)&&("" == ___uri)) {
                            _getCellShape().add(((gmml.impl.CellShapeImpl) spawnChildFromEnterElement((gmml.impl.CellShapeImpl.class), 56, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CellShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 63;
                            return ;
                        }
                        if (("CellComponentShape" == ___local)&&("" == ___uri)) {
                            _getCellComponentShape().add(((gmml.impl.CellComponentShapeImpl) spawnChildFromEnterElement((gmml.impl.CellComponentShapeImpl.class), 59, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CellComponentShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 57;
                            return ;
                        }
                        state = 59;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "Email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText3(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  45 :
                        if (("LineShape" == ___local)&&("" == ___uri)) {
                            _getLineShape().add(((gmml.impl.LineShapeImpl) spawnChildFromEnterElement((gmml.impl.LineShapeImpl.class), 45, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LineShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 43;
                            return ;
                        }
                        if (("Arc" == ___local)&&("" == ___uri)) {
                            _getArc().add(((gmml.impl.ArcImpl) spawnChildFromEnterElement((gmml.impl.ArcImpl.class), 48, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Arc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  49 :
                        if (("Label" == ___local)&&("" == ___uri)) {
                            _getLabel().add(((gmml.impl.LabelImpl) spawnChildFromEnterElement((gmml.impl.LabelImpl.class), 49, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Label" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 65;
                            return ;
                        }
                        if (("Shape" == ___local)&&("" == ___uri)) {
                            _getShape().add(((gmml.impl.ShapeImpl) spawnChildFromEnterElement((gmml.impl.ShapeImpl.class), 52, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Shape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 50;
                            return ;
                        }
                        state = 52;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Data-Source");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  59 :
                        if (("CellComponentShape" == ___local)&&("" == ___uri)) {
                            _getCellComponentShape().add(((gmml.impl.CellComponentShapeImpl) spawnChildFromEnterElement((gmml.impl.CellComponentShapeImpl.class), 59, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CellComponentShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 57;
                            return ;
                        }
                        if (("ProteinComplexShape" == ___local)&&("" == ___uri)) {
                            _getProteinComplexShape().add(((gmml.impl.ProteinComplexShapeImpl) spawnChildFromEnterElement((gmml.impl.ProteinComplexShapeImpl.class), 62, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProteinComplexShape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 60;
                            return ;
                        }
                        state = 62;
                        continue outer;
                    case  65 :
                        attIdx = context.getAttribute("", "TextLabel");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Author");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  52 :
                        if (("Shape" == ___local)&&("" == ___uri)) {
                            _getShape().add(((gmml.impl.ShapeImpl) spawnChildFromEnterElement((gmml.impl.ShapeImpl.class), 52, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Shape" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 50;
                            return ;
                        }
                        if (("Brace" == ___local)&&("" == ___uri)) {
                            _getBrace().add(((gmml.impl.BraceImpl) spawnChildFromEnterElement((gmml.impl.BraceImpl.class), 55, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Brace" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 53;
                            return ;
                        }
                        state = 55;
                        continue outer;
                    case  33 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "Maintained-By");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText6(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "Last-Modified");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText7(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText8(v);
                            continue outer;
                        }
                        break;
                    case  48 :
                        if (("Arc" == ___local)&&("" == ___uri)) {
                            _getArc().add(((gmml.impl.ArcImpl) spawnChildFromEnterElement((gmml.impl.ArcImpl.class), 48, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Arc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 46;
                            return ;
                        }
                        if (("Label" == ___local)&&("" == ___uri)) {
                            _getLabel().add(((gmml.impl.LabelImpl) spawnChildFromEnterElement((gmml.impl.LabelImpl.class), 49, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Label" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 65;
                            return ;
                        }
                        state = 49;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "Version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 27;
                            eatText9(v);
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  30 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  39 :
                        if (("GeneProduct" == ___local)&&("" == ___uri)) {
                            _getGeneProduct().add(((gmml.impl.GeneProductImpl) spawnChildFromEnterElement((gmml.impl.GeneProductImpl.class), 39, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GeneProduct" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        if (("Line" == ___local)&&("" == ___uri)) {
                            _getLine().add(((gmml.impl.LineImpl) spawnChildFromEnterElement((gmml.impl.LineImpl.class), 42, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Line" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  36 :
                        if (("GeneProduct" == ___local)&&("" == ___uri)) {
                            _getGeneProduct().add(((gmml.impl.GeneProductImpl) spawnChildFromEnterElement((gmml.impl.GeneProductImpl.class), 39, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GeneProduct" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  43 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  50 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Availability = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Organism = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Email = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DataSource = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Author = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MaintainedBy = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LastModified = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Version = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  66 :
                        if (("Label" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 49;
                            return ;
                        }
                        break;
                    case  51 :
                        if (("Shape" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 52;
                            return ;
                        }
                        break;
                    case  57 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "Availability");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "Organism");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 24;
                            eatText2(v);
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  37 :
                        attIdx = context.getAttribute("", "BackpageHead");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "GeneID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  32 :
                        if (("Comment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  53 :
                        _getBrace().add(((gmml.impl.BraceTypeImpl) spawnChildFromLeaveElement((gmml.impl.BraceTypeImpl.class), 54, ___uri, ___local, ___qname)));
                        return ;
                    case  40 :
                        attIdx = context.getAttribute("", "Style");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  46 :
                        _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromLeaveElement((gmml.impl.ArcTypeImpl.class), 47, ___uri, ___local, ___qname)));
                        return ;
                    case  35 :
                        if (("Graphics" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  34 :
                        attIdx = context.getAttribute("", "BoardHeight");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  62 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  54 :
                        if (("Brace" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 55;
                            return ;
                        }
                        break;
                    case  55 :
                        state = 56;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  29 :
                        if (("Notes" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  64 :
                        if (("CellShape" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 56;
                            return ;
                        }
                        break;
                    case  56 :
                        state = 59;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "Email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText3(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  49 :
                        state = 52;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Data-Source");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  61 :
                        if (("ProteinComplexShape" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 62;
                            return ;
                        }
                        break;
                    case  59 :
                        state = 62;
                        continue outer;
                    case  65 :
                        attIdx = context.getAttribute("", "TextLabel");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  58 :
                        if (("CellComponentShape" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 59;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("GeneProduct" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Author");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  52 :
                        state = 55;
                        continue outer;
                    case  47 :
                        if (("Arc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "Maintained-By");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText6(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "Last-Modified");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText7(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText8(v);
                            continue outer;
                        }
                        break;
                    case  48 :
                        state = 49;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "Version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 27;
                            eatText9(v);
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  44 :
                        if (("LineShape" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  43 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  41 :
                        if (("Line" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  50 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  57 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getCellComponentShape().add(((gmml.impl.CellComponentShapeTypeImpl) spawnChildFromEnterAttribute((gmml.impl.CellComponentShapeTypeImpl.class), 58, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Availability" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  21 :
                        if (("Organism" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  37 :
                        if (("BackpageHead" == ___local)&&("" == ___uri)) {
                            _getGeneProduct().add(((gmml.impl.GeneProductTypeImpl) spawnChildFromEnterAttribute((gmml.impl.GeneProductTypeImpl.class), 38, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("GeneID" == ___local)&&("" == ___uri)) {
                            _getGeneProduct().add(((gmml.impl.GeneProductTypeImpl) spawnChildFromEnterAttribute((gmml.impl.GeneProductTypeImpl.class), 38, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("GeneProduct-Data-Source" == ___local)&&("" == ___uri)) {
                            _getGeneProduct().add(((gmml.impl.GeneProductTypeImpl) spawnChildFromEnterAttribute((gmml.impl.GeneProductTypeImpl.class), 38, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  53 :
                        _getBrace().add(((gmml.impl.BraceTypeImpl) spawnChildFromEnterAttribute((gmml.impl.BraceTypeImpl.class), 54, ___uri, ___local, ___qname)));
                        return ;
                    case  40 :
                        if (("Style" == ___local)&&("" == ___uri)) {
                            _getLine().add(((gmml.impl.LineTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineTypeImpl.class), 41, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getLine().add(((gmml.impl.LineTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineTypeImpl.class), 41, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  46 :
                        _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromEnterAttribute((gmml.impl.ArcTypeImpl.class), 47, ___uri, ___local, ___qname)));
                        return ;
                    case  34 :
                        if (("BoardHeight" == ___local)&&("" == ___uri)) {
                            _Graphics = ((gmml.impl.PathwayTypeImpl.GraphicsTypeImpl) spawnChildFromEnterAttribute((gmml.impl.PathwayTypeImpl.GraphicsTypeImpl.class), 35, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  62 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  55 :
                        state = 56;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  56 :
                        state = 59;
                        continue outer;
                    case  9 :
                        if (("Email" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  49 :
                        state = 52;
                        continue outer;
                    case  6 :
                        if (("Data-Source" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  59 :
                        state = 62;
                        continue outer;
                    case  65 :
                        if (("TextLabel" == ___local)&&("" == ___uri)) {
                            _getLabel().add(((gmml.impl.LabelTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LabelTypeImpl.class), 66, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Author" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  52 :
                        state = 55;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  15 :
                        if (("Maintained-By" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        if (("Last-Modified" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  48 :
                        state = 49;
                        continue outer;
                    case  24 :
                        if (("Version" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  43 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getLineShape().add(((gmml.impl.LineShapeTypeImpl) spawnChildFromEnterAttribute((gmml.impl.LineShapeTypeImpl.class), 44, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  50 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getShape().add(((gmml.impl.ShapeTypeImpl) spawnChildFromEnterAttribute((gmml.impl.ShapeTypeImpl.class), 51, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  26 :
                        if (("Version" == ___local)&&("" == ___uri)) {
                            state = 27;
                            return ;
                        }
                        break;
                    case  57 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "Availability");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  17 :
                        if (("Maintained-By" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "Organism");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 24;
                            eatText2(v);
                            continue outer;
                        }
                        state = 24;
                        continue outer;
                    case  37 :
                        attIdx = context.getAttribute("", "BackpageHead");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "GeneID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  53 :
                        _getBrace().add(((gmml.impl.BraceTypeImpl) spawnChildFromLeaveAttribute((gmml.impl.BraceTypeImpl.class), 54, ___uri, ___local, ___qname)));
                        return ;
                    case  2 :
                        if (("Author" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  40 :
                        attIdx = context.getAttribute("", "Style");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  46 :
                        _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromLeaveAttribute((gmml.impl.ArcTypeImpl.class), 47, ___uri, ___local, ___qname)));
                        return ;
                    case  34 :
                        attIdx = context.getAttribute("", "BoardHeight");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  62 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        if (("Email" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Availability" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  55 :
                        state = 56;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  56 :
                        state = 59;
                        continue outer;
                    case  23 :
                        if (("Organism" == ___local)&&("" == ___uri)) {
                            state = 24;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "Email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText3(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  8 :
                        if (("Data-Source" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  49 :
                        state = 52;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Data-Source");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  59 :
                        state = 62;
                        continue outer;
                    case  65 :
                        attIdx = context.getAttribute("", "TextLabel");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  14 :
                        if (("Last-Modified" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Author");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  52 :
                        state = 55;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "Maintained-By");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText6(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "Last-Modified");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText7(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText8(v);
                            continue outer;
                        }
                        break;
                    case  48 :
                        state = 49;
                        continue outer;
                    case  24 :
                        attIdx = context.getAttribute("", "Version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 27;
                            eatText9(v);
                            continue outer;
                        }
                        state = 27;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  43 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  20 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  50 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  57 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  22 :
                            state = 23;
                            eatText2(value);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "Availability");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  21 :
                            attIdx = context.getAttribute("", "Organism");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 24;
                                eatText2(v);
                                continue outer;
                            }
                            state = 24;
                            continue outer;
                        case  37 :
                            attIdx = context.getAttribute("", "BackpageHead");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "GeneID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "GeneProduct-Data-Source");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  53 :
                            _getBrace().add(((gmml.impl.BraceTypeImpl) spawnChildFromText((gmml.impl.BraceTypeImpl.class), 54, value)));
                            return ;
                        case  25 :
                            state = 26;
                            eatText9(value);
                            return ;
                        case  40 :
                            attIdx = context.getAttribute("", "Style");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  46 :
                            _getArc().add(((gmml.impl.ArcTypeImpl) spawnChildFromText((gmml.impl.ArcTypeImpl.class), 47, value)));
                            return ;
                        case  34 :
                            attIdx = context.getAttribute("", "BoardHeight");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  62 :
                            revertToParentFromText(value);
                            return ;
                        case  55 :
                            state = 56;
                            continue outer;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  56 :
                            state = 59;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "Email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText3(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  49 :
                            state = 52;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "Data-Source");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText4(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  19 :
                            state = 20;
                            eatText8(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText3(value);
                            return ;
                        case  59 :
                            state = 62;
                            continue outer;
                        case  65 :
                            attIdx = context.getAttribute("", "TextLabel");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "Author");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText5(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  52 :
                            state = 55;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText6(value);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "Maintained-By");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText6(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "Last-Modified");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText7(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText10(value);
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "Name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText8(v);
                                continue outer;
                            }
                            break;
                        case  1 :
                            state = 2;
                            eatText5(value);
                            return ;
                        case  48 :
                            state = 49;
                            continue outer;
                        case  24 :
                            attIdx = context.getAttribute("", "Version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 27;
                                eatText9(v);
                                continue outer;
                            }
                            state = 27;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  43 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  13 :
                            state = 14;
                            eatText7(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText11(value);
                            return ;
                        case  50 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comment = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Notes = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
